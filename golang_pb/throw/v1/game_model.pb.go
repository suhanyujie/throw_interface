// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: game_model.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SkillState int32

const (
	// 前摇状态
	SkillState_Front SkillState = 0
	// 施放状态
	SkillState_Casting SkillState = 1
	// 后摇状态
	SkillState_Back SkillState = 2
	// 冷却
	SkillState_Cooling SkillState = 3
	// 就绪
	SkillState_Ready SkillState = 4
)

// Enum value maps for SkillState.
var (
	SkillState_name = map[int32]string{
		0: "Front",
		1: "Casting",
		2: "Back",
		3: "Cooling",
		4: "Ready",
	}
	SkillState_value = map[string]int32{
		"Front":   0,
		"Casting": 1,
		"Back":    2,
		"Cooling": 3,
		"Ready":   4,
	}
)

func (x SkillState) Enum() *SkillState {
	p := new(SkillState)
	*p = x
	return p
}

func (x SkillState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SkillState) Descriptor() protoreflect.EnumDescriptor {
	return file_game_model_proto_enumTypes[0].Descriptor()
}

func (SkillState) Type() protoreflect.EnumType {
	return &file_game_model_proto_enumTypes[0]
}

func (x SkillState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SkillState.Descriptor instead.
func (SkillState) EnumDescriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{0}
}

type HitPos int32

const (
	HitPos_Normal    HitPos = 0 // 普通：四肢，躯干
	HitPos_Fatal     HitPos = 1 // 致命：头部
	HitPos_Secondary HitPos = 2 // 次要：膝盖
)

// Enum value maps for HitPos.
var (
	HitPos_name = map[int32]string{
		0: "Normal",
		1: "Fatal",
		2: "Secondary",
	}
	HitPos_value = map[string]int32{
		"Normal":    0,
		"Fatal":     1,
		"Secondary": 2,
	}
)

func (x HitPos) Enum() *HitPos {
	p := new(HitPos)
	*p = x
	return p
}

func (x HitPos) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HitPos) Descriptor() protoreflect.EnumDescriptor {
	return file_game_model_proto_enumTypes[1].Descriptor()
}

func (HitPos) Type() protoreflect.EnumType {
	return &file_game_model_proto_enumTypes[1]
}

func (x HitPos) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HitPos.Descriptor instead.
func (HitPos) EnumDescriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{1}
}

// 游戏开始，服务端推送给客户端
type GameStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"` // 游戏即将开始 倒计时 3 s
}

func (x *GameStart) Reset() {
	*x = GameStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStart) ProtoMessage() {}

func (x *GameStart) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStart.ProtoReflect.Descriptor instead.
func (*GameStart) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{0}
}

func (x *GameStart) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 客户端玩家发起一次攻击
type AttackOnceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` // 发起攻击的用户 id
}

func (x *AttackOnceInfo) Reset() {
	*x = AttackOnceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttackOnceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttackOnceInfo) ProtoMessage() {}

func (x *AttackOnceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttackOnceInfo.ProtoReflect.Descriptor instead.
func (*AttackOnceInfo) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{1}
}

func (x *AttackOnceInfo) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 攻击结果
// 服务端推送给客户端
type AttackOnceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"event" msgpack:"event"
	Event string `protobuf:"bytes,1,opt,name=event,proto3" json:"event" msgpack:"event"`
	// @inject_tag: msgpack:"msg"
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty" msgpack:"msg"`
	// @inject_tag: msgpack:"attackType"
	AttackType string `protobuf:"bytes,3,opt,name=attackType,proto3" json:"attackType,omitempty" msgpack:"attackType"` // 攻击类型，目前先普通攻击
	// @inject_tag: msgpack:"players"
	Players []*PlayerStatus `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty" msgpack:"players"`
	// @inject_tag: msgpack:"from"
	From int32 `protobuf:"varint,5,opt,name=from,proto3" json:"from,omitempty" msgpack:"from"` // 攻击方
	// @inject_tag: msgpack:"to"
	To int32 `protobuf:"varint,6,opt,name=to,proto3" json:"to,omitempty" msgpack:"to"` // 受到攻击的一方
	// @inject_tag: msgpack:"hitInfo"
	HitInfo *HitInfo `protobuf:"bytes,7,opt,name=hitInfo,proto3" json:"hitInfo,omitempty" msgpack:"hitInfo"` // 命中信息
}

func (x *AttackOnceResult) Reset() {
	*x = AttackOnceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttackOnceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttackOnceResult) ProtoMessage() {}

func (x *AttackOnceResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttackOnceResult.ProtoReflect.Descriptor instead.
func (*AttackOnceResult) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{2}
}

func (x *AttackOnceResult) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *AttackOnceResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AttackOnceResult) GetAttackType() string {
	if x != nil {
		return x.AttackType
	}
	return ""
}

func (x *AttackOnceResult) GetPlayers() []*PlayerStatus {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *AttackOnceResult) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *AttackOnceResult) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *AttackOnceResult) GetHitInfo() *HitInfo {
	if x != nil {
		return x.HitInfo
	}
	return nil
}

// 一次攻击的命中信息
type HitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否命中 | @inject_tag: json:"isHit" msgpack:"isHit"
	IsHit bool `protobuf:"varint,1,opt,name=isHit,proto3" json:"isHit" msgpack:"isHit"`
	// 命中部位 | @inject_tag: json:"pos" msgpack:"pos"
	Pos HitPos `protobuf:"varint,2,opt,name=pos,proto3,enum=throw.v1.HitPos" json:"pos" msgpack:"pos"`
}

func (x *HitInfo) Reset() {
	*x = HitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitInfo) ProtoMessage() {}

func (x *HitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitInfo.ProtoReflect.Descriptor instead.
func (*HitInfo) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{3}
}

func (x *HitInfo) GetIsHit() bool {
	if x != nil {
		return x.IsHit
	}
	return false
}

func (x *HitInfo) GetPos() HitPos {
	if x != nil {
		return x.Pos
	}
	return HitPos_Normal
}

type PlayerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"uid"
	Uid int32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty" msgpack:"uid"`
	// @inject_tag: msgpack:"heroId"
	HeroId int32 `protobuf:"varint,2,opt,name=heroId,proto3" json:"heroId,omitempty" msgpack:"heroId"`
	// @inject_tag: msgpack:"hp"
	Hp int32 `protobuf:"varint,3,opt,name=hp,proto3" json:"hp,omitempty" msgpack:"hp"`
	// @inject_tag: msgpack:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" msgpack:"name"`
}

func (x *PlayerStatus) Reset() {
	*x = PlayerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStatus) ProtoMessage() {}

func (x *PlayerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStatus.ProtoReflect.Descriptor instead.
func (*PlayerStatus) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerStatus) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PlayerStatus) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *PlayerStatus) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *PlayerStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 退出游戏房间
// 考虑一下，游戏中途时，用户退出房间，如何处理？
type UserQuit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"uid"
	Uid int32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty" msgpack:"uid"`
}

func (x *UserQuit) Reset() {
	*x = UserQuit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserQuit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserQuit) ProtoMessage() {}

func (x *UserQuit) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserQuit.ProtoReflect.Descriptor instead.
func (*UserQuit) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{5}
}

func (x *UserQuit) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 游戏结束时，服务端推送消息给客户端
// `event` 表示游戏结束标识，用于前端识别，该推送是什么事件/消息
type GameOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"winPlayer"
	WinPlayer *PlayerStatus `protobuf:"bytes,1,opt,name=winPlayer,proto3" json:"winPlayer,omitempty" msgpack:"winPlayer"`
	// @inject_tag: msgpack:"losePlayer"
	LosePlayer *PlayerStatus `protobuf:"bytes,2,opt,name=losePlayer,proto3" json:"losePlayer,omitempty" msgpack:"losePlayer"`
	// @inject_tag: msgpack:"event"
	Event string `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty" msgpack:"event"`
	// @inject_tag: msgpack:"msg"
	Msg string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty" msgpack:"msg"`
}

func (x *GameOver) Reset() {
	*x = GameOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOver) ProtoMessage() {}

func (x *GameOver) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOver.ProtoReflect.Descriptor instead.
func (*GameOver) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{6}
}

func (x *GameOver) GetWinPlayer() *PlayerStatus {
	if x != nil {
		return x.WinPlayer
	}
	return nil
}

func (x *GameOver) GetLosePlayer() *PlayerStatus {
	if x != nil {
		return x.LosePlayer
	}
	return nil
}

func (x *GameOver) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *GameOver) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 玩家移动
type RoleMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"uid"
	Uid int32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty" msgpack:"uid"`
	// @inject_tag: msgpack:"target"
	Target *RolePosition `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty" msgpack:"target"`
	// @inject_tag: msgpack:"vector"
	Vector *RolePosition `protobuf:"bytes,3,opt,name=vector,proto3" json:"vector,omitempty" msgpack:"vector"`
	// @inject_tag: msgpack:"angle"
	Angle int32 `protobuf:"varint,4,opt,name=angle,proto3" json:"angle,omitempty" msgpack:"angle"`
	// @inject_tag: msgpack:"joystick"
	Joystick bool `protobuf:"varint,5,opt,name=joystick,proto3" json:"joystick,omitempty" msgpack:"joystick"`
	// @inject_tag: msgpack:"skillId"
	SkillId int32 `protobuf:"varint,6,opt,name=skillId,proto3" json:"skillId,omitempty" msgpack:"skillId"`
	// @inject_tag: msgpack:"targetId"
	TargetId int32 `protobuf:"varint,7,opt,name=targetId,proto3" json:"targetId,omitempty" msgpack:"targetId"`
}

func (x *RoleMove) Reset() {
	*x = RoleMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMove) ProtoMessage() {}

func (x *RoleMove) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMove.ProtoReflect.Descriptor instead.
func (*RoleMove) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{7}
}

func (x *RoleMove) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RoleMove) GetTarget() *RolePosition {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *RoleMove) GetVector() *RolePosition {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *RoleMove) GetAngle() int32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *RoleMove) GetJoystick() bool {
	if x != nil {
		return x.Joystick
	}
	return false
}

func (x *RoleMove) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *RoleMove) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

// 广播攻击行为
type MsgRoleAttack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 玩家编号 | @inject_tag: msgpack:"uid"
	Uid int32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty" msgpack:"uid"`
	// @inject_tag: msgpack:"skillId"
	SkillId int32 `protobuf:"varint,2,opt,name=skillId,proto3" json:"skillId,omitempty" msgpack:"skillId"`
	// 技能状态 | @inject_tag: msgpack:"state"
	State SkillState `protobuf:"varint,3,opt,name=state,proto3,enum=throw.v1.SkillState" json:"state,omitempty" msgpack:"state"`
	// 目标玩家编号（uid） | @inject_tag: msgpack:"targetId"
	TargetId int32 `protobuf:"varint,4,opt,name=targetId,proto3" json:"targetId,omitempty" msgpack:"targetId"`
	// @inject_tag: msgpack:"pos"
	Pos *RolePosition `protobuf:"bytes,5,opt,name=pos,proto3" json:"pos,omitempty" msgpack:"pos"` // 攻击方坐标
	// @inject_tag: msgpack:"atkInput"
	AtkInput *SInputData `protobuf:"bytes,6,opt,name=atkInput,proto3" json:"atkInput,omitempty" msgpack:"atkInput"` // 攻击参数
}

func (x *MsgRoleAttack) Reset() {
	*x = MsgRoleAttack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRoleAttack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRoleAttack) ProtoMessage() {}

func (x *MsgRoleAttack) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRoleAttack.ProtoReflect.Descriptor instead.
func (*MsgRoleAttack) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{8}
}

func (x *MsgRoleAttack) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MsgRoleAttack) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *MsgRoleAttack) GetState() SkillState {
	if x != nil {
		return x.State
	}
	return SkillState_Front
}

func (x *MsgRoleAttack) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *MsgRoleAttack) GetPos() *RolePosition {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *MsgRoleAttack) GetAtkInput() *SInputData {
	if x != nil {
		return x.AtkInput
	}
	return nil
}

type SInputData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发射起点x | @inject_tag: msgpack:"sx"
	Sx int32 `protobuf:"varint,1,opt,name=sx,proto3" json:"sx,omitempty" msgpack:"sx"`
	// 发射起点y | @inject_tag: msgpack:"sy"
	Sy int32 `protobuf:"varint,2,opt,name=sy,proto3" json:"sy,omitempty" msgpack:"sy"`
	// 速度 | @inject_tag: msgpack:"vx"
	Vx int32 `protobuf:"varint,3,opt,name=vx,proto3" json:"vx,omitempty" msgpack:"vx"`
	// @inject_tag: msgpack:"vy"
	Vy int32 `protobuf:"varint,4,opt,name=vy,proto3" json:"vy,omitempty" msgpack:"vy"`
	// 重力刻度 | @inject_tag: msgpack:"gs"
	Gs int32 `protobuf:"varint,5,opt,name=gs,proto3" json:"gs,omitempty" msgpack:"gs"`
	// 重力系数 | @inject_tag: msgpack:"g"
	G int32 `protobuf:"varint,6,opt,name=g,proto3" json:"g,omitempty" msgpack:"g"`
}

func (x *SInputData) Reset() {
	*x = SInputData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SInputData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SInputData) ProtoMessage() {}

func (x *SInputData) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SInputData.ProtoReflect.Descriptor instead.
func (*SInputData) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{9}
}

func (x *SInputData) GetSx() int32 {
	if x != nil {
		return x.Sx
	}
	return 0
}

func (x *SInputData) GetSy() int32 {
	if x != nil {
		return x.Sy
	}
	return 0
}

func (x *SInputData) GetVx() int32 {
	if x != nil {
		return x.Vx
	}
	return 0
}

func (x *SInputData) GetVy() int32 {
	if x != nil {
		return x.Vy
	}
	return 0
}

func (x *SInputData) GetGs() int32 {
	if x != nil {
		return x.Gs
	}
	return 0
}

func (x *SInputData) GetG() int32 {
	if x != nil {
		return x.G
	}
	return 0
}

type HitRoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 玩家编号 | @inject_tag: msgpack:"uid"
	Uid int32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty" msgpack:"uid"`
	// @inject_tag: msgpack:"skillId"
	SkillId int32 `protobuf:"varint,2,opt,name=skillId,proto3" json:"skillId,omitempty" msgpack:"skillId"`
	// 技能状态 | @inject_tag: msgpack:"state"
	State SkillState `protobuf:"varint,3,opt,name=state,proto3,enum=throw.v1.SkillState" json:"state,omitempty" msgpack:"state"`
	// 目标玩家编号（uid） | @inject_tag: msgpack:"targetId"
	TargetId int32 `protobuf:"varint,4,opt,name=targetId,proto3" json:"targetId,omitempty" msgpack:"targetId"`
	// @inject_tag: msgpack:"rolePos"
	RolePos *RolePosition `protobuf:"bytes,5,opt,name=rolePos,proto3" json:"rolePos,omitempty" msgpack:"rolePos"` // 攻击方坐标
	// @inject_tag: msgpack:"hitPos"
	HitPos HitPos `protobuf:"varint,6,opt,name=hitPos,proto3,enum=throw.v1.HitPos" json:"hitPos,omitempty" msgpack:"hitPos"`
	// @inject_tag: msgpack:"atkInput"
	AtkInput *SInputData `protobuf:"bytes,7,opt,name=atkInput,proto3" json:"atkInput,omitempty" msgpack:"atkInput"` // 攻击参数
}

func (x *HitRoleInfo) Reset() {
	*x = HitRoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitRoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitRoleInfo) ProtoMessage() {}

func (x *HitRoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitRoleInfo.ProtoReflect.Descriptor instead.
func (*HitRoleInfo) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{10}
}

func (x *HitRoleInfo) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *HitRoleInfo) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *HitRoleInfo) GetState() SkillState {
	if x != nil {
		return x.State
	}
	return SkillState_Front
}

func (x *HitRoleInfo) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *HitRoleInfo) GetRolePos() *RolePosition {
	if x != nil {
		return x.RolePos
	}
	return nil
}

func (x *HitRoleInfo) GetHitPos() HitPos {
	if x != nil {
		return x.HitPos
	}
	return HitPos_Normal
}

func (x *HitRoleInfo) GetAtkInput() *SInputData {
	if x != nil {
		return x.AtkInput
	}
	return nil
}

// 角色状态
type RoleState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"id"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" msgpack:"id"` // 角色 id/英雄 id
	// @inject_tag: msgpack:"pos"
	Pos *RolePosition `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty" msgpack:"pos"`
	// @inject_tag: msgpack:"skills"
	Skills []*RoleSkill `protobuf:"bytes,3,rep,name=skills,proto3" json:"skills,omitempty" msgpack:"skills"`
}

func (x *RoleState) Reset() {
	*x = RoleState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleState) ProtoMessage() {}

func (x *RoleState) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleState.ProtoReflect.Descriptor instead.
func (*RoleState) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{11}
}

func (x *RoleState) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleState) GetPos() *RolePosition {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *RoleState) GetSkills() []*RoleSkill {
	if x != nil {
		return x.Skills
	}
	return nil
}

// 玩家位置信息
type RolePosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"x"
	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty" msgpack:"x"` // x 轴坐标
	// @inject_tag: msgpack:"y"
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty" msgpack:"y"` // y 轴坐标
}

func (x *RolePosition) Reset() {
	*x = RolePosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePosition) ProtoMessage() {}

func (x *RolePosition) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePosition.ProtoReflect.Descriptor instead.
func (*RolePosition) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{12}
}

func (x *RolePosition) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *RolePosition) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// 角色技能
type RoleSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"id"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" msgpack:"id"`
	// @inject_tag: msgpack:"forSelf"
	ForSelf bool `protobuf:"varint,2,opt,name=forSelf,proto3" json:"forSelf,omitempty" msgpack:"forSelf"` // 技能的增益对象
	// @inject_tag: msgpack:"state"
	State SkillState `protobuf:"varint,3,opt,name=state,proto3,enum=throw.v1.SkillState" json:"state,omitempty" msgpack:"state"`
	// @inject_tag: msgpack:"attr"
	Attr map[string]string `protobuf:"bytes,4,rep,name=attr,proto3" json:"attr,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" msgpack:"attr"` // 技能相关的属性
}

func (x *RoleSkill) Reset() {
	*x = RoleSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSkill) ProtoMessage() {}

func (x *RoleSkill) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSkill.ProtoReflect.Descriptor instead.
func (*RoleSkill) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{13}
}

func (x *RoleSkill) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleSkill) GetForSelf() bool {
	if x != nil {
		return x.ForSelf
	}
	return false
}

func (x *RoleSkill) GetState() SkillState {
	if x != nil {
		return x.State
	}
	return SkillState_Front
}

func (x *RoleSkill) GetAttr() map[string]string {
	if x != nil {
		return x.Attr
	}
	return nil
}

type RoomState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"id"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" msgpack:"id"`
	// @inject_tag: msgpack:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" msgpack:"name"`
	// @inject_tag: msgpack:"amount"
	Amount int32 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty" msgpack:"amount"` //房间当前用户数
	// @inject_tag: msgpack:"max"
	Max int32 `protobuf:"varint,4,opt,name=max,proto3" json:"max,omitempty" msgpack:"max"` // 房间最大用户数量
	// @inject_tag: msgpack:"timeUpdate"
	TimeUpdate int32 `protobuf:"varint,5,opt,name=timeUpdate,proto3" json:"timeUpdate,omitempty" msgpack:"timeUpdate"`
}

func (x *RoomState) Reset() {
	*x = RoomState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomState) ProtoMessage() {}

func (x *RoomState) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomState.ProtoReflect.Descriptor instead.
func (*RoomState) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{14}
}

func (x *RoomState) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomState) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RoomState) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *RoomState) GetTimeUpdate() int32 {
	if x != nil {
		return x.TimeUpdate
	}
	return 0
}

type RoomDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"id"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" msgpack:"id"`
	// @inject_tag: msgpack:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" msgpack:"name"`
	// @inject_tag: msgpack:"amount"
	Amount uint32 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty" msgpack:"amount"` // 房间当前用户数量
	// @inject_tag: msgpack:"max"
	Max uint32 `protobuf:"varint,4,opt,name=max,proto3" json:"max,omitempty" msgpack:"max"` // 房间最大用户数量
	// @inject_tag: msgpack:"timeUpdate"
	TimeUpdate uint32 `protobuf:"varint,5,opt,name=timeUpdate,proto3" json:"timeUpdate,omitempty" msgpack:"timeUpdate"` // 房间信息的最后更新时间
	// @inject_tag: msgpack:"roles"
	Roles []*RoleDetailed `protobuf:"bytes,6,rep,name=roles,proto3" json:"roles,omitempty" msgpack:"roles"` // 房间内的用户
	// @inject_tag: msgpack:"npcs"
	Npcs []*RoleDetailed `protobuf:"bytes,7,rep,name=npcs,proto3" json:"npcs,omitempty" msgpack:"npcs"` // 房间内非玩家角色
	// @inject_tag: msgpack:"messages"
	Messages []*RoomMsgRecord `protobuf:"bytes,8,rep,name=messages,proto3" json:"messages,omitempty" msgpack:"messages"` // 房间历史聊天记录
}

func (x *RoomDetail) Reset() {
	*x = RoomDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomDetail) ProtoMessage() {}

func (x *RoomDetail) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomDetail.ProtoReflect.Descriptor instead.
func (*RoomDetail) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{15}
}

func (x *RoomDetail) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomDetail) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RoomDetail) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *RoomDetail) GetTimeUpdate() uint32 {
	if x != nil {
		return x.TimeUpdate
	}
	return 0
}

func (x *RoomDetail) GetRoles() []*RoleDetailed {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *RoomDetail) GetNpcs() []*RoleDetailed {
	if x != nil {
		return x.Npcs
	}
	return nil
}

func (x *RoomDetail) GetMessages() []*RoomMsgRecord {
	if x != nil {
		return x.Messages
	}
	return nil
}

// 房间内聊天记录信息
type RoomMsgRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"time"
	Time string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty" msgpack:"time"`
	// @inject_tag: msgpack:"role"
	Role *RoleInfo `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty" msgpack:"role"`
	// @inject_tag: msgpack:"content"
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty" msgpack:"content"`
}

func (x *RoomMsgRecord) Reset() {
	*x = RoomMsgRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomMsgRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMsgRecord) ProtoMessage() {}

func (x *RoomMsgRecord) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMsgRecord.ProtoReflect.Descriptor instead.
func (*RoomMsgRecord) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{16}
}

func (x *RoomMsgRecord) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *RoomMsgRecord) GetRole() *RoleInfo {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RoomMsgRecord) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"id"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" msgpack:"id"`
	// @inject_tag: msgpack:"nickname"
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty" msgpack:"nickname"`
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{17}
}

func (x *RoleInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

// 角色/英雄信息
type RoleDetailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"roleInfo"
	RoleInfo *RoleInfo `protobuf:"bytes,1,opt,name=roleInfo,proto3" json:"roleInfo,omitempty" msgpack:"roleInfo"`
	// @inject_tag: msgpack:"state"
	State *RoleState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty" msgpack:"state"`
	// @inject_tag: msgpack:"attributes"
	Attributes map[string]int32 `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3" msgpack:"attributes"`
}

func (x *RoleDetailed) Reset() {
	*x = RoleDetailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDetailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDetailed) ProtoMessage() {}

func (x *RoleDetailed) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDetailed.ProtoReflect.Descriptor instead.
func (*RoleDetailed) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{18}
}

func (x *RoleDetailed) GetRoleInfo() *RoleInfo {
	if x != nil {
		return x.RoleInfo
	}
	return nil
}

func (x *RoleDetailed) GetState() *RoleState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *RoleDetailed) GetAttributes() map[string]int32 {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// 游戏即将开始时，广播房间内玩家的状态
type GameStartInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"msg"
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty" msgpack:"msg"`
	// @inject_tag: msgpack:"roles"
	Roles []*RoleDetailed `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty" msgpack:"roles"`
}

func (x *GameStartInfo) Reset() {
	*x = GameStartInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_model_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStartInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStartInfo) ProtoMessage() {}

func (x *GameStartInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_model_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStartInfo.ProtoReflect.Descriptor instead.
func (*GameStartInfo) Descriptor() ([]byte, []int) {
	return file_game_model_proto_rawDescGZIP(), []int{19}
}

func (x *GameStartInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GameStartInfo) GetRoles() []*RoleDetailed {
	if x != nil {
		return x.Roles
	}
	return nil
}

var File_game_model_proto protoreflect.FileDescriptor

var file_game_model_proto_rawDesc = []byte{
	0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x22, 0x1d, 0x0a, 0x09,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x22, 0x0a, 0x0e, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x4f, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0xdd, 0x01, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x4f, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x2b, 0x0a, 0x07, 0x68, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x68, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x43, 0x0a, 0x07, 0x48, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x48, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x69, 0x74,
	0x12, 0x22, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x22, 0x5c, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x68, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x68, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x1c, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x69, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x22, 0xa0, 0x01, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x09, 0x77, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0a, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0a, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0xe4, 0x01, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f, 0x79, 0x73,
	0x74, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6a, 0x6f, 0x79, 0x73,
	0x74, 0x69, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0xdf, 0x01, 0x0a, 0x0d, 0x4d,
	0x73, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x74,
	0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74,
	0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x61, 0x74, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x6a, 0x0a, 0x0a,
	0x53, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x73, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x73, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x76, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x76, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x67, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x67, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x67, 0x22, 0x8f, 0x02, 0x0a, 0x0b, 0x48, 0x69, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x28,
	0x0a, 0x06, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x74, 0x50, 0x6f, 0x73,
	0x52, 0x06, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x74, 0x6b, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x68, 0x72,
	0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x61, 0x74, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x72, 0x0a, 0x09, 0x52, 0x6f,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f,
	0x73, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x2a,
	0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0xcd, 0x01, 0x0a, 0x09, 0x52,
	0x6f, 0x6c, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x53,
	0x65, 0x6c, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x53, 0x65,
	0x6c, 0x66, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31,
	0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74,
	0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x74, 0x74,
	0x72, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x79, 0x0a, 0x09, 0x52, 0x6f,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d,
	0x61, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x70, 0x63, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x04, 0x6e, 0x70, 0x63, 0x73, 0x12, 0x33, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x65, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xf0, 0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x2a, 0x46, 0x0a, 0x0a, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x61, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x61,
	0x63, 0x6b, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x04, 0x2a, 0x2e, 0x0a, 0x06,
	0x48, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x61, 0x74, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x10, 0x02, 0x42, 0x39, 0x5a, 0x37,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x68, 0x61, 0x6e,
	0x79, 0x75, 0x6a, 0x69, 0x65, 0x2f, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x68, 0x72, 0x6f,
	0x77, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_game_model_proto_rawDescOnce sync.Once
	file_game_model_proto_rawDescData = file_game_model_proto_rawDesc
)

func file_game_model_proto_rawDescGZIP() []byte {
	file_game_model_proto_rawDescOnce.Do(func() {
		file_game_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_model_proto_rawDescData)
	})
	return file_game_model_proto_rawDescData
}

var file_game_model_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_game_model_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_game_model_proto_goTypes = []interface{}{
	(SkillState)(0),          // 0: throw.v1.SkillState
	(HitPos)(0),              // 1: throw.v1.HitPos
	(*GameStart)(nil),        // 2: throw.v1.GameStart
	(*AttackOnceInfo)(nil),   // 3: throw.v1.AttackOnceInfo
	(*AttackOnceResult)(nil), // 4: throw.v1.AttackOnceResult
	(*HitInfo)(nil),          // 5: throw.v1.HitInfo
	(*PlayerStatus)(nil),     // 6: throw.v1.PlayerStatus
	(*UserQuit)(nil),         // 7: throw.v1.UserQuit
	(*GameOver)(nil),         // 8: throw.v1.GameOver
	(*RoleMove)(nil),         // 9: throw.v1.RoleMove
	(*MsgRoleAttack)(nil),    // 10: throw.v1.MsgRoleAttack
	(*SInputData)(nil),       // 11: throw.v1.SInputData
	(*HitRoleInfo)(nil),      // 12: throw.v1.HitRoleInfo
	(*RoleState)(nil),        // 13: throw.v1.RoleState
	(*RolePosition)(nil),     // 14: throw.v1.RolePosition
	(*RoleSkill)(nil),        // 15: throw.v1.RoleSkill
	(*RoomState)(nil),        // 16: throw.v1.RoomState
	(*RoomDetail)(nil),       // 17: throw.v1.RoomDetail
	(*RoomMsgRecord)(nil),    // 18: throw.v1.RoomMsgRecord
	(*RoleInfo)(nil),         // 19: throw.v1.RoleInfo
	(*RoleDetailed)(nil),     // 20: throw.v1.RoleDetailed
	(*GameStartInfo)(nil),    // 21: throw.v1.GameStartInfo
	nil,                      // 22: throw.v1.RoleSkill.AttrEntry
	nil,                      // 23: throw.v1.RoleDetailed.AttributesEntry
}
var file_game_model_proto_depIdxs = []int32{
	6,  // 0: throw.v1.AttackOnceResult.players:type_name -> throw.v1.PlayerStatus
	5,  // 1: throw.v1.AttackOnceResult.hitInfo:type_name -> throw.v1.HitInfo
	1,  // 2: throw.v1.HitInfo.pos:type_name -> throw.v1.HitPos
	6,  // 3: throw.v1.GameOver.winPlayer:type_name -> throw.v1.PlayerStatus
	6,  // 4: throw.v1.GameOver.losePlayer:type_name -> throw.v1.PlayerStatus
	14, // 5: throw.v1.RoleMove.target:type_name -> throw.v1.RolePosition
	14, // 6: throw.v1.RoleMove.vector:type_name -> throw.v1.RolePosition
	0,  // 7: throw.v1.MsgRoleAttack.state:type_name -> throw.v1.SkillState
	14, // 8: throw.v1.MsgRoleAttack.pos:type_name -> throw.v1.RolePosition
	11, // 9: throw.v1.MsgRoleAttack.atkInput:type_name -> throw.v1.SInputData
	0,  // 10: throw.v1.HitRoleInfo.state:type_name -> throw.v1.SkillState
	14, // 11: throw.v1.HitRoleInfo.rolePos:type_name -> throw.v1.RolePosition
	1,  // 12: throw.v1.HitRoleInfo.hitPos:type_name -> throw.v1.HitPos
	11, // 13: throw.v1.HitRoleInfo.atkInput:type_name -> throw.v1.SInputData
	14, // 14: throw.v1.RoleState.pos:type_name -> throw.v1.RolePosition
	15, // 15: throw.v1.RoleState.skills:type_name -> throw.v1.RoleSkill
	0,  // 16: throw.v1.RoleSkill.state:type_name -> throw.v1.SkillState
	22, // 17: throw.v1.RoleSkill.attr:type_name -> throw.v1.RoleSkill.AttrEntry
	20, // 18: throw.v1.RoomDetail.roles:type_name -> throw.v1.RoleDetailed
	20, // 19: throw.v1.RoomDetail.npcs:type_name -> throw.v1.RoleDetailed
	18, // 20: throw.v1.RoomDetail.messages:type_name -> throw.v1.RoomMsgRecord
	19, // 21: throw.v1.RoomMsgRecord.role:type_name -> throw.v1.RoleInfo
	19, // 22: throw.v1.RoleDetailed.roleInfo:type_name -> throw.v1.RoleInfo
	13, // 23: throw.v1.RoleDetailed.state:type_name -> throw.v1.RoleState
	23, // 24: throw.v1.RoleDetailed.attributes:type_name -> throw.v1.RoleDetailed.AttributesEntry
	20, // 25: throw.v1.GameStartInfo.roles:type_name -> throw.v1.RoleDetailed
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_game_model_proto_init() }
func file_game_model_proto_init() {
	if File_game_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttackOnceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttackOnceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserQuit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRoleAttack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SInputData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HitRoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomMsgRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDetailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_model_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStartInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_model_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_game_model_proto_goTypes,
		DependencyIndexes: file_game_model_proto_depIdxs,
		EnumInfos:         file_game_model_proto_enumTypes,
		MessageInfos:      file_game_model_proto_msgTypes,
	}.Build()
	File_game_model_proto = out.File
	file_game_model_proto_rawDesc = nil
	file_game_model_proto_goTypes = nil
	file_game_model_proto_depIdxs = nil
}
