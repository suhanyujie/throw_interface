// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: farm.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DisasterType int32

const (
	DisasterType_Empty0DisasterType DisasterType = 0
	// 干旱
	DisasterType_Dry DisasterType = 1
	// 昆虫
	DisasterType_Insect DisasterType = 2
	// 乌鸦
	DisasterType_Crow DisasterType = 3
)

// Enum value maps for DisasterType.
var (
	DisasterType_name = map[int32]string{
		0: "Empty0DisasterType",
		1: "Dry",
		2: "Insect",
		3: "Crow",
	}
	DisasterType_value = map[string]int32{
		"Empty0DisasterType": 0,
		"Dry":                1,
		"Insect":             2,
		"Crow":               3,
	}
)

func (x DisasterType) Enum() *DisasterType {
	p := new(DisasterType)
	*p = x
	return p
}

func (x DisasterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DisasterType) Descriptor() protoreflect.EnumDescriptor {
	return file_farm_proto_enumTypes[0].Descriptor()
}

func (DisasterType) Type() protoreflect.EnumType {
	return &file_farm_proto_enumTypes[0]
}

func (x DisasterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DisasterType.Descriptor instead.
func (DisasterType) EnumDescriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{0}
}

// 客户端请求服务端结构
type IRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: msgpack:"action"
	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty" msgpack:"action"`
	// @inject_tag: msgpack:"method"
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty" msgpack:"method"`
	// @inject_tag: msgpack:"callback"
	Callback string `protobuf:"bytes,3,opt,name=callback,proto3" json:"callback,omitempty" msgpack:"callback"`
	// @inject_tag: msgpack:"isCompress"
	IsCompress bool `protobuf:"varint,4,opt,name=isCompress,proto3" json:"isCompress,omitempty" msgpack:"isCompress"` // true 表示 data 为 proto 编码的字节数组
	// @inject_tag: msgpack:"data"
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty" msgpack:"data"` // data 是 proto 编码的字节
}

func (x *IRequest) Reset() {
	*x = IRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IRequest) ProtoMessage() {}

func (x *IRequest) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IRequest.ProtoReflect.Descriptor instead.
func (*IRequest) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{0}
}

func (x *IRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *IRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *IRequest) GetCallback() string {
	if x != nil {
		return x.Callback
	}
	return ""
}

func (x *IRequest) GetIsCompress() bool {
	if x != nil {
		return x.IsCompress
	}
	return false
}

func (x *IRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 服务端响应客户端的请求，或者给客户端推送消息
type IResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 0 正常，不为0是异常 | @inject_tag: msgpack:"code" json:"code"
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" msgpack:"code"`
	// 异常时的详细信息 | @inject_tag: msgpack:"msg" json:"msg"
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg" msgpack:"msg"`
	// @inject_tag: msgpack:"isCompress" json:"isCompress"
	IsCompress bool `protobuf:"varint,3,opt,name=isCompress,proto3" json:"isCompress" msgpack:"isCompress"` // true 表示 data 为 proto 编码的字节数组
	// @inject_tag: msgpack:"data" json:"data"
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data" msgpack:"data"` // data 是 proto 编码的字节
	// @inject_tag: msgpack:"callback" json:"callback"
	Callback string `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback" msgpack:"callback"`
}

func (x *IResponse) Reset() {
	*x = IResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IResponse) ProtoMessage() {}

func (x *IResponse) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IResponse.ProtoReflect.Descriptor instead.
func (*IResponse) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{1}
}

func (x *IResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *IResponse) GetIsCompress() bool {
	if x != nil {
		return x.IsCompress
	}
	return false
}

func (x *IResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *IResponse) GetCallback() string {
	if x != nil {
		return x.Callback
	}
	return ""
}

type ErrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 备注信息 | @inject_tag: msgpack:"msg" json:"msg"
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg" msgpack:"msg"`
}

func (x *ErrInfo) Reset() {
	*x = ErrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrInfo) ProtoMessage() {}

func (x *ErrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrInfo.ProtoReflect.Descriptor instead.
func (*ErrInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{2}
}

func (x *ErrInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type NormalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 备注信息 | @inject_tag: msgpack:"msg" json:"msg"
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg" msgpack:"msg"`
}

func (x *NormalInfo) Reset() {
	*x = NormalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalInfo) ProtoMessage() {}

func (x *NormalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalInfo.ProtoReflect.Descriptor instead.
func (*NormalInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{3}
}

func (x *NormalInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 客户端建立连接后，请求一次登录，参数是用户的 token
type FarmUserLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户的 token，一般从平台获取 | @inject_tag: msgpack:"token" json:"token"
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token" msgpack:"token"`
}

func (x *FarmUserLogin) Reset() {
	*x = FarmUserLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmUserLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmUserLogin) ProtoMessage() {}

func (x *FarmUserLogin) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmUserLogin.ProtoReflect.Descriptor instead.
func (*FarmUserLogin) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{4}
}

func (x *FarmUserLogin) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 天灾推送
type FarmDisaster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 天灾类型 | @inject_tag: msgpack:"typ" json:"typ"
	Typ DisasterType `protobuf:"varint,1,opt,name=typ,proto3,enum=throw.v1.DisasterType" json:"typ" msgpack:"typ"`
	// 天灾 id | @inject_tag: msgpack:"disasterId" json:"disasterId"
	DisasterId int32 `protobuf:"varint,2,opt,name=disasterId,proto3" json:"disasterId" msgpack:"disasterId"`
	// 土地位置 | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,3,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 土地位置 | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,4,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
	// 备注信息 | @inject_tag: msgpack:"msg" json:"msg"
	Msg string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg" msgpack:"msg"`
}

func (x *FarmDisaster) Reset() {
	*x = FarmDisaster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmDisaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmDisaster) ProtoMessage() {}

func (x *FarmDisaster) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmDisaster.ProtoReflect.Descriptor instead.
func (*FarmDisaster) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{5}
}

func (x *FarmDisaster) GetTyp() DisasterType {
	if x != nil {
		return x.Typ
	}
	return DisasterType_Empty0DisasterType
}

func (x *FarmDisaster) GetDisasterId() int32 {
	if x != nil {
		return x.DisasterId
	}
	return 0
}

func (x *FarmDisaster) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *FarmDisaster) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

func (x *FarmDisaster) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type MeetCrow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 备注信息 | @inject_tag: msgpack:"msg" json:"msg"
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg" msgpack:"msg"`
	// 稻草人是否生效，如果稻草人生效，则“乌鸦灾难”不减产 | @inject_tag: msgpack:"scareCrowIsEffect" json:"scareCrowIsEffect"
	ScareCrowIsEffect bool `protobuf:"varint,2,opt,name=scareCrowIsEffect,proto3" json:"scareCrowIsEffect" msgpack:"scareCrowIsEffect"`
}

func (x *MeetCrow) Reset() {
	*x = MeetCrow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeetCrow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetCrow) ProtoMessage() {}

func (x *MeetCrow) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetCrow.ProtoReflect.Descriptor instead.
func (*MeetCrow) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{6}
}

func (x *MeetCrow) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MeetCrow) GetScareCrowIsEffect() bool {
	if x != nil {
		return x.ScareCrowIsEffect
	}
	return false
}

// 普通商人
type NormalSellers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 一批普通商人 | @inject_tag: msgpack:"list" json:"list"
	List []*OneNormalSeller `protobuf:"bytes,1,rep,name=list,proto3" json:"list" msgpack:"list"`
}

func (x *NormalSellers) Reset() {
	*x = NormalSellers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalSellers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalSellers) ProtoMessage() {}

func (x *NormalSellers) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalSellers.ProtoReflect.Descriptor instead.
func (*NormalSellers) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{7}
}

func (x *NormalSellers) GetList() []*OneNormalSeller {
	if x != nil {
		return x.List
	}
	return nil
}

// 一个普通商人
type OneNormalSeller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商人出现的唯一标识，全局唯一，每一次都不一样 | @inject_tag: msgpack:"key" json:"key"
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" msgpack:"key"`
	// 商人需要的商品信息 | @inject_tag: msgpack:"needCrops" json:"needCrops"
	NeedCrops []*OneCropNeedle `protobuf:"bytes,2,rep,name=needCrops,proto3" json:"needCrops" msgpack:"needCrops"`
	// 交易后的报酬 | @inject_tag: msgpack:"rewards" json:"rewards"
	Rewards *SellReward `protobuf:"bytes,3,opt,name=rewards,proto3" json:"rewards" msgpack:"rewards"`
	// 停留的秒数 | @inject_tag: msgpack:"interval" json:"interval"
	Interval int32 `protobuf:"varint,4,opt,name=interval,proto3" json:"interval" msgpack:"interval"`
}

func (x *OneNormalSeller) Reset() {
	*x = OneNormalSeller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneNormalSeller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneNormalSeller) ProtoMessage() {}

func (x *OneNormalSeller) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneNormalSeller.ProtoReflect.Descriptor instead.
func (*OneNormalSeller) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{8}
}

func (x *OneNormalSeller) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *OneNormalSeller) GetNeedCrops() []*OneCropNeedle {
	if x != nil {
		return x.NeedCrops
	}
	return nil
}

func (x *OneNormalSeller) GetRewards() *SellReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *OneNormalSeller) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type MysterySeller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商人出现的唯一标识 | @inject_tag: msgpack:"key" json:"key"
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" msgpack:"key"`
	// 商人需要的商品信息 | @inject_tag: msgpack:"needCrops" json:"needCrops"
	NeedCrops []*OneCropNeedle `protobuf:"bytes,2,rep,name=needCrops,proto3" json:"needCrops" msgpack:"needCrops"`
	// 交易后的报酬 | @inject_tag: msgpack:"reward" json:"reward"
	Reward *SellReward `protobuf:"bytes,3,opt,name=reward,proto3" json:"reward" msgpack:"reward"`
	// 停留的秒数 | @inject_tag: msgpack:"interval" json:"interval"
	Interval int32 `protobuf:"varint,4,opt,name=interval,proto3" json:"interval" msgpack:"interval"`
}

func (x *MysterySeller) Reset() {
	*x = MysterySeller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysterySeller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysterySeller) ProtoMessage() {}

func (x *MysterySeller) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysterySeller.ProtoReflect.Descriptor instead.
func (*MysterySeller) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{9}
}

func (x *MysterySeller) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MysterySeller) GetNeedCrops() []*OneCropNeedle {
	if x != nil {
		return x.NeedCrops
	}
	return nil
}

func (x *MysterySeller) GetReward() *SellReward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *MysterySeller) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type OneCropNeedle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商人需要的商品 id | @inject_tag: msgpack:"productId" json:"productId"
	ProductId int32 `protobuf:"varint,1,opt,name=productId,proto3" json:"productId" msgpack:"productId"`
	// 商品对应的数量 | @inject_tag: msgpack:"num" json:"num"
	Num int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num" msgpack:"num"`
}

func (x *OneCropNeedle) Reset() {
	*x = OneCropNeedle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneCropNeedle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneCropNeedle) ProtoMessage() {}

func (x *OneCropNeedle) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneCropNeedle.ProtoReflect.Descriptor instead.
func (*OneCropNeedle) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{10}
}

func (x *OneCropNeedle) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OneCropNeedle) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type SellReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 金币数 | @inject_tag: msgpack:"gold" json:"gold"
	Gold int32 `protobuf:"varint,1,opt,name=gold,proto3" json:"gold" msgpack:"gold"`
	// 宝箱 | @inject_tag: msgpack:"chest" json:"chest"
	Chest map[int32]int32 `protobuf:"bytes,2,rep,name=chest,proto3" json:"chest" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3" msgpack:"chest"`
}

func (x *SellReward) Reset() {
	*x = SellReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellReward) ProtoMessage() {}

func (x *SellReward) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellReward.ProtoReflect.Descriptor instead.
func (*SellReward) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{11}
}

func (x *SellReward) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *SellReward) GetChest() map[int32]int32 {
	if x != nil {
		return x.Chest
	}
	return nil
}

// 神秘叶子
type MysteryLeaf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 唯一标识 | @inject_tag: msgpack:"key" json:"key"
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" msgpack:"key"`
	// 停留的秒数 | @inject_tag: msgpack:"keepSec" json:"keepSec"
	KeepSec int32 `protobuf:"varint,2,opt,name=keepSec,proto3" json:"keepSec" msgpack:"keepSec"`
	// 创建的时间 | @inject_tag: msgpack:"createTime" json:"createTime"
	CreateTime int32 `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime" msgpack:"createTime"`
}

func (x *MysteryLeaf) Reset() {
	*x = MysteryLeaf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysteryLeaf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysteryLeaf) ProtoMessage() {}

func (x *MysteryLeaf) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysteryLeaf.ProtoReflect.Descriptor instead.
func (*MysteryLeaf) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{12}
}

func (x *MysteryLeaf) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MysteryLeaf) GetKeepSec() int32 {
	if x != nil {
		return x.KeepSec
	}
	return 0
}

func (x *MysteryLeaf) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 检查登录
type ScCheckLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否是新用户 | @inject_tag: msgpack:"isNewUser" json:"isNewUser"
	IsNewUser bool `protobuf:"varint,1,opt,name=isNewUser,proto3" json:"isNewUser" msgpack:"isNewUser"`
}

func (x *ScCheckLogin) Reset() {
	*x = ScCheckLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScCheckLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScCheckLogin) ProtoMessage() {}

func (x *ScCheckLogin) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScCheckLogin.ProtoReflect.Descriptor instead.
func (*ScCheckLogin) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{13}
}

func (x *ScCheckLogin) GetIsNewUser() bool {
	if x != nil {
		return x.IsNewUser
	}
	return false
}

type AccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user id | @inject_tag: msgpack:"uid" json:"uid"
	Uid int32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid" msgpack:"uid"`
	// | @inject_tag: msgpack:"nick_name" json:"nick_name"
	NickName string `protobuf:"bytes,2,opt,name=nick_name,json=nickName,proto3" json:"nick_name" msgpack:"nick_name"`
	// | @inject_tag: msgpack:"avatar" json:"avatar"
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar" msgpack:"avatar"`
	// | @inject_tag: msgpack:"gender" json:"gender"
	Gender int32 `protobuf:"varint,4,opt,name=gender,proto3" json:"gender" msgpack:"gender"`
}

func (x *AccountInfo) Reset() {
	*x = AccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfo) ProtoMessage() {}

func (x *AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfo.ProtoReflect.Descriptor instead.
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{14}
}

func (x *AccountInfo) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AccountInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AccountInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AccountInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

type ScGetUInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScGetUInfoList) Reset() {
	*x = ScGetUInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScGetUInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScGetUInfoList) ProtoMessage() {}

func (x *ScGetUInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScGetUInfoList.ProtoReflect.Descriptor instead.
func (*ScGetUInfoList) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{15}
}

type MyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户信息 | @inject_tag: msgpack:"accountInfo" json:"accountInfo"
	AccountInfo *AccountInfo `protobuf:"bytes,1,opt,name=accountInfo,proto3" json:"accountInfo" msgpack:"accountInfo"`
	// | @inject_tag: msgpack:"needReset" json:"needReset"
	NeedReset bool `protobuf:"varint,2,opt,name=needReset,proto3" json:"needReset" msgpack:"needReset"`
}

func (x *MyInfo) Reset() {
	*x = MyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyInfo) ProtoMessage() {}

func (x *MyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyInfo.ProtoReflect.Descriptor instead.
func (*MyInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{16}
}

func (x *MyInfo) GetAccountInfo() *AccountInfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

func (x *MyInfo) GetNeedReset() bool {
	if x != nil {
		return x.NeedReset
	}
	return false
}

type ScGetUInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 经验值 | @inject_tag: msgpack:"exp" json:"exp"
	Exp int32 `protobuf:"varint,1,opt,name=exp,proto3" json:"exp" msgpack:"exp"`
	// 金币值 | @inject_tag: msgpack:"gold" json:"gold"
	Gold int32 `protobuf:"varint,2,opt,name=gold,proto3" json:"gold" msgpack:"gold"`
	// 钻石 | @inject_tag: msgpack:"diamond" json:"diamond"
	Diamond int32 `protobuf:"varint,3,opt,name=diamond,proto3" json:"diamond" msgpack:"diamond"`
	// 新手步骤 | @inject_tag: msgpack:"guideStep" json:"guideStep"
	GuideStep int32 `protobuf:"varint,4,opt,name=guideStep,proto3" json:"guideStep" msgpack:"guideStep"`
	// 剩余双倍收获的时间 | @inject_tag: msgpack:"leftDoubleTime" json:"leftDoubleTime"
	LeftDoubleTime int32 `protobuf:"varint,5,opt,name=leftDoubleTime,proto3" json:"leftDoubleTime" msgpack:"leftDoubleTime"`
	// 仓库内物品信息 | @inject_tag: msgpack:"wareHouse" json:"wareHouse"
	WareHouse []*WareHouseItem `protobuf:"bytes,6,rep,name=wareHouse,proto3" json:"wareHouse" msgpack:"wareHouse"`
	// 种值的最大的等级数据，key为物品id, lv 为 level | @inject_tag: msgpack:"maxBuildLvMap" json:"maxBuildLvMap"
	MaxBuildLvMap []*MaxBuildLvItem `protobuf:"bytes,7,rep,name=maxBuildLvMap,proto3" json:"maxBuildLvMap" msgpack:"maxBuildLvMap"`
}

func (x *ScGetUInfo) Reset() {
	*x = ScGetUInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScGetUInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScGetUInfo) ProtoMessage() {}

func (x *ScGetUInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScGetUInfo.ProtoReflect.Descriptor instead.
func (*ScGetUInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{17}
}

func (x *ScGetUInfo) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *ScGetUInfo) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *ScGetUInfo) GetDiamond() int32 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *ScGetUInfo) GetGuideStep() int32 {
	if x != nil {
		return x.GuideStep
	}
	return 0
}

func (x *ScGetUInfo) GetLeftDoubleTime() int32 {
	if x != nil {
		return x.LeftDoubleTime
	}
	return 0
}

func (x *ScGetUInfo) GetWareHouse() []*WareHouseItem {
	if x != nil {
		return x.WareHouse
	}
	return nil
}

func (x *ScGetUInfo) GetMaxBuildLvMap() []*MaxBuildLvItem {
	if x != nil {
		return x.MaxBuildLvMap
	}
	return nil
}

type WareHouseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// | @inject_tag: msgpack:"key" json:"key"
	Key int32 `protobuf:"varint,1,opt,name=key,proto3" json:"key" msgpack:"key"`
	// | @inject_tag: msgpack:"num" json:"num"
	Num int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num" msgpack:"num"`
}

func (x *WareHouseItem) Reset() {
	*x = WareHouseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WareHouseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WareHouseItem) ProtoMessage() {}

func (x *WareHouseItem) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WareHouseItem.ProtoReflect.Descriptor instead.
func (*WareHouseItem) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{18}
}

func (x *WareHouseItem) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *WareHouseItem) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type MaxBuildLvItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// | @inject_tag: msgpack:"key" json:"key"
	Key int32 `protobuf:"varint,1,opt,name=key,proto3" json:"key" msgpack:"key"`
	// | @inject_tag: msgpack:"lv" json:"lv"
	Lv int32 `protobuf:"varint,2,opt,name=lv,proto3" json:"lv" msgpack:"lv"`
}

func (x *MaxBuildLvItem) Reset() {
	*x = MaxBuildLvItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBuildLvItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBuildLvItem) ProtoMessage() {}

func (x *MaxBuildLvItem) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBuildLvItem.ProtoReflect.Descriptor instead.
func (*MaxBuildLvItem) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{19}
}

func (x *MaxBuildLvItem) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *MaxBuildLvItem) GetLv() int32 {
	if x != nil {
		return x.Lv
	}
	return 0
}

type CsUpdateMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1表示金币， 2表示钻石 | @inject_tag: msgpack:"moneyType" json:"moneyType"
	MoneyType int32 `protobuf:"varint,1,opt,name=moneyType,proto3" json:"moneyType" msgpack:"moneyType"`
	// 数量变化的量，如果是加钱，为正数，如果是减钱就是负数 | @inject_tag: msgpack:"moneyChangeNum" json:"moneyChangeNum"
	MoneyChangeNum int32 `protobuf:"varint,2,opt,name=moneyChangeNum,proto3" json:"moneyChangeNum" msgpack:"moneyChangeNum"`
	// 变化的原因 1、出售  2 任务 | @inject_tag: msgpack:"changeReason" json:"changeReason"
	ChangeReason int32 `protobuf:"varint,3,opt,name=changeReason,proto3" json:"changeReason" msgpack:"changeReason"`
}

func (x *CsUpdateMoney) Reset() {
	*x = CsUpdateMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsUpdateMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsUpdateMoney) ProtoMessage() {}

func (x *CsUpdateMoney) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsUpdateMoney.ProtoReflect.Descriptor instead.
func (*CsUpdateMoney) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{20}
}

func (x *CsUpdateMoney) GetMoneyType() int32 {
	if x != nil {
		return x.MoneyType
	}
	return 0
}

func (x *CsUpdateMoney) GetMoneyChangeNum() int32 {
	if x != nil {
		return x.MoneyChangeNum
	}
	return 0
}

func (x *CsUpdateMoney) GetChangeReason() int32 {
	if x != nil {
		return x.ChangeReason
	}
	return 0
}

type CsWareHouseSale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// | @inject_tag: msgpack:"saveProduct" json:"saveProduct"
	SaveProduct []*WareHouse `protobuf:"bytes,1,rep,name=saveProduct,proto3" json:"saveProduct" msgpack:"saveProduct"` // 可能是之前写错的单词，先保持一样吧
	// 1表示神秘商人出售, 2表示这架出售普通仓库出售 | @inject_tag: msgpack:"saleType" json:"saleType"
	SaleType int32 `protobuf:"varint,2,opt,name=saleType,proto3" json:"saleType" msgpack:"saleType"`
	// 对神秘商人出售时，携带对应的标识 | @inject_tag: msgpack:"uuid" json:"uuid"
	Uuid string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid" msgpack:"uuid"`
}

func (x *CsWareHouseSale) Reset() {
	*x = CsWareHouseSale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsWareHouseSale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsWareHouseSale) ProtoMessage() {}

func (x *CsWareHouseSale) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsWareHouseSale.ProtoReflect.Descriptor instead.
func (*CsWareHouseSale) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{21}
}

func (x *CsWareHouseSale) GetSaveProduct() []*WareHouse {
	if x != nil {
		return x.SaveProduct
	}
	return nil
}

func (x *CsWareHouseSale) GetSaleType() int32 {
	if x != nil {
		return x.SaleType
	}
	return 0
}

func (x *CsWareHouseSale) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type WareHouse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// | @inject_tag: msgpack:"key" json:"key"
	Key int32 `protobuf:"varint,1,opt,name=key,proto3" json:"key" msgpack:"key"`
	// | @inject_tag: msgpack:"num" json:"num"
	Num int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num" msgpack:"num"`
}

func (x *WareHouse) Reset() {
	*x = WareHouse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WareHouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WareHouse) ProtoMessage() {}

func (x *WareHouse) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WareHouse.ProtoReflect.Descriptor instead.
func (*WareHouse) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{22}
}

func (x *WareHouse) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *WareHouse) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type ScWareHouseSale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// | @inject_tag: msgpack:"gold" json:"gold"
	Gold int32 `protobuf:"varint,1,opt,name=gold,proto3" json:"gold" msgpack:"gold"`
}

func (x *ScWareHouseSale) Reset() {
	*x = ScWareHouseSale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScWareHouseSale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScWareHouseSale) ProtoMessage() {}

func (x *ScWareHouseSale) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScWareHouseSale.ProtoReflect.Descriptor instead.
func (*ScWareHouseSale) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{23}
}

func (x *ScWareHouseSale) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

type CsSetGuideStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 新手教学的位置 | @inject_tag: msgpack:"guideStep" json:"guideStep"
	GuideStep int32 `protobuf:"varint,1,opt,name=guideStep,proto3" json:"guideStep" msgpack:"guideStep"`
}

func (x *CsSetGuideStep) Reset() {
	*x = CsSetGuideStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsSetGuideStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsSetGuideStep) ProtoMessage() {}

func (x *CsSetGuideStep) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsSetGuideStep.ProtoReflect.Descriptor instead.
func (*CsSetGuideStep) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{24}
}

func (x *CsSetGuideStep) GetGuideStep() int32 {
	if x != nil {
		return x.GuideStep
	}
	return 0
}

type CsSetDouble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否是免费开启 | @inject_tag: msgpack:"isFree" json:"isFree"
	IsFree bool `protobuf:"varint,1,opt,name=isFree,proto3" json:"isFree" msgpack:"isFree"`
}

func (x *CsSetDouble) Reset() {
	*x = CsSetDouble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsSetDouble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsSetDouble) ProtoMessage() {}

func (x *CsSetDouble) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsSetDouble.ProtoReflect.Descriptor instead.
func (*CsSetDouble) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{25}
}

func (x *CsSetDouble) GetIsFree() bool {
	if x != nil {
		return x.IsFree
	}
	return false
}

type ScSetDouble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 花费的的钻石数量 | @inject_tag: msgpack:"diamond" json:"diamond"
	Diamond int32 `protobuf:"varint,1,opt,name=diamond,proto3" json:"diamond" msgpack:"diamond"`
}

func (x *ScSetDouble) Reset() {
	*x = ScSetDouble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScSetDouble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScSetDouble) ProtoMessage() {}

func (x *ScSetDouble) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScSetDouble.ProtoReflect.Descriptor instead.
func (*ScSetDouble) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{26}
}

func (x *ScSetDouble) GetDiamond() int32 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

type ScFarmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 花费的的钻石数量 | @inject_tag: msgpack:"seedFarmInfo" json:"seedFarmInfo"
	SeedFarmInfo []*SeedFarmInfo `protobuf:"bytes,1,rep,name=seedFarmInfo,proto3" json:"seedFarmInfo" msgpack:"seedFarmInfo"`
	// 作物信息 | @inject_tag: msgpack:"buildInfo" json:"buildInfo"
	BuildInfo []*BuildInfo `protobuf:"bytes,2,rep,name=buildInfo,proto3" json:"buildInfo" msgpack:"buildInfo"`
	// 服务器时间，用于计算 dt | @inject_tag: msgpack:"serverTime" json:"serverTime"
	ServerTime int32 `protobuf:"varint,3,opt,name=serverTime,proto3" json:"serverTime" msgpack:"serverTime"`
}

func (x *ScFarmInfo) Reset() {
	*x = ScFarmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScFarmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScFarmInfo) ProtoMessage() {}

func (x *ScFarmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScFarmInfo.ProtoReflect.Descriptor instead.
func (*ScFarmInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{27}
}

func (x *ScFarmInfo) GetSeedFarmInfo() []*SeedFarmInfo {
	if x != nil {
		return x.SeedFarmInfo
	}
	return nil
}

func (x *ScFarmInfo) GetBuildInfo() []*BuildInfo {
	if x != nil {
		return x.BuildInfo
	}
	return nil
}

func (x *ScFarmInfo) GetServerTime() int32 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

type SeedFarmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
	// 干涸天灾 | @inject_tag: msgpack:"ganhe" json:"ganhe"
	Ganhe int32 `protobuf:"varint,3,opt,name=ganhe,proto3" json:"ganhe" msgpack:"ganhe"`
}

func (x *SeedFarmInfo) Reset() {
	*x = SeedFarmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeedFarmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedFarmInfo) ProtoMessage() {}

func (x *SeedFarmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedFarmInfo.ProtoReflect.Descriptor instead.
func (*SeedFarmInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{28}
}

func (x *SeedFarmInfo) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *SeedFarmInfo) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

func (x *SeedFarmInfo) GetGanhe() int32 {
	if x != nil {
		return x.Ganhe
	}
	return 0
}

type BuildInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
	// 建筑 id | @inject_tag: msgpack:"buildId" json:"buildId"
	BuildId int32 `protobuf:"varint,3,opt,name=buildId,proto3" json:"buildId" msgpack:"buildId"`
	// 建筑等级 | @inject_tag: msgpack:"buildLevel" json:"buildLevel"
	BuildLevel int32 `protobuf:"varint,4,opt,name=buildLevel,proto3" json:"buildLevel" msgpack:"buildLevel"`
	// 建筑uid  | @inject_tag: msgpack:"uuid" json:"uuid"
	Uuid string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid" msgpack:"uuid"`
	// 建造时间  | @inject_tag: msgpack:"buildTime" json:"buildTime"
	BuildTime int32 `protobuf:"varint,6,opt,name=buildTime,proto3" json:"buildTime" msgpack:"buildTime"`
	// 最后一次收获时间 | @inject_tag: msgpack:"lastHarvestTime" json:"lastHarvestTime"
	LastHarvestTime int32 `protobuf:"varint,7,opt,name=lastHarvestTime,proto3" json:"lastHarvestTime" msgpack:"lastHarvestTime"`
	// 生产的id,主要用于工厂一类的 | @inject_tag: msgpack:"productId" json:"productId"
	ProductId int32 `protobuf:"varint,8,opt,name=productId,proto3" json:"productId" msgpack:"productId"`
	// 使用过建造加速 | @inject_tag: msgpack:"buildSpeed" json:"buildSpeed"
	BuildSpeed bool `protobuf:"varint,9,opt,name=buildSpeed,proto3" json:"buildSpeed" msgpack:"buildSpeed"`
	// 虫灾信息 | @inject_tag: msgpack:"chong" json:"chong"
	Chong int32 `protobuf:"varint,10,opt,name=chong,proto3" json:"chong" msgpack:"chong"`
	// 作物状态 1正常，2枯萎（已到达最大收获次数） | @inject_tag: msgpack:"status" json:"status"
	Status int32 `protobuf:"varint,11,opt,name=status,proto3" json:"status" msgpack:"status"`
}

func (x *BuildInfo) Reset() {
	*x = BuildInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildInfo) ProtoMessage() {}

func (x *BuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildInfo.ProtoReflect.Descriptor instead.
func (*BuildInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{29}
}

func (x *BuildInfo) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *BuildInfo) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

func (x *BuildInfo) GetBuildId() int32 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

func (x *BuildInfo) GetBuildLevel() int32 {
	if x != nil {
		return x.BuildLevel
	}
	return 0
}

func (x *BuildInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BuildInfo) GetBuildTime() int32 {
	if x != nil {
		return x.BuildTime
	}
	return 0
}

func (x *BuildInfo) GetLastHarvestTime() int32 {
	if x != nil {
		return x.LastHarvestTime
	}
	return 0
}

func (x *BuildInfo) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *BuildInfo) GetBuildSpeed() bool {
	if x != nil {
		return x.BuildSpeed
	}
	return false
}

func (x *BuildInfo) GetChong() int32 {
	if x != nil {
		return x.Chong
	}
	return 0
}

func (x *BuildInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CsBuyFarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
	// 是否是免费的 | @inject_tag: msgpack:"isFree" json:"isFree"
	IsFree bool `protobuf:"varint,3,opt,name=isFree,proto3" json:"isFree" msgpack:"isFree"`
}

func (x *CsBuyFarm) Reset() {
	*x = CsBuyFarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsBuyFarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsBuyFarm) ProtoMessage() {}

func (x *CsBuyFarm) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsBuyFarm.ProtoReflect.Descriptor instead.
func (*CsBuyFarm) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{30}
}

func (x *CsBuyFarm) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *CsBuyFarm) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

func (x *CsBuyFarm) GetIsFree() bool {
	if x != nil {
		return x.IsFree
	}
	return false
}

type ScBuyFarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 减少的金币数量 | @inject_tag: msgpack:"misGold" json:"misGold"
	MisGold int32 `protobuf:"varint,1,opt,name=misGold,proto3" json:"misGold" msgpack:"misGold"`
}

func (x *ScBuyFarm) Reset() {
	*x = ScBuyFarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScBuyFarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScBuyFarm) ProtoMessage() {}

func (x *ScBuyFarm) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScBuyFarm.ProtoReflect.Descriptor instead.
func (*ScBuyFarm) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{31}
}

func (x *ScBuyFarm) GetMisGold() int32 {
	if x != nil {
		return x.MisGold
	}
	return 0
}

type CsSeedBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
	// 建筑 id | @inject_tag: msgpack:"buildId" json:"buildId"
	BuildId int32 `protobuf:"varint,3,opt,name=buildId,proto3" json:"buildId" msgpack:"buildId"`
	// 建筑等级 | @inject_tag: msgpack:"buildLevel" json:"buildLevel"
	BuildLevel int32 `protobuf:"varint,4,opt,name=buildLevel,proto3" json:"buildLevel" msgpack:"buildLevel"`
	// 建筑uid  | @inject_tag: msgpack:"uuid" json:"uuid"
	Uuid string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid" msgpack:"uuid"`
	// 是否是免费的 | @inject_tag: msgpack:"isFree" json:"isFree"
	IsFree bool `protobuf:"varint,6,opt,name=isFree,proto3" json:"isFree" msgpack:"isFree"`
}

func (x *CsSeedBuild) Reset() {
	*x = CsSeedBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsSeedBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsSeedBuild) ProtoMessage() {}

func (x *CsSeedBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsSeedBuild.ProtoReflect.Descriptor instead.
func (*CsSeedBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{32}
}

func (x *CsSeedBuild) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *CsSeedBuild) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

func (x *CsSeedBuild) GetBuildId() int32 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

func (x *CsSeedBuild) GetBuildLevel() int32 {
	if x != nil {
		return x.BuildLevel
	}
	return 0
}

func (x *CsSeedBuild) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CsSeedBuild) GetIsFree() bool {
	if x != nil {
		return x.IsFree
	}
	return false
}

type ScSeedBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 减少的金币数量 | @inject_tag: msgpack:"misGold" json:"misGold"
	MisGold int32 `protobuf:"varint,1,opt,name=misGold,proto3" json:"misGold" msgpack:"misGold"`
}

func (x *ScSeedBuild) Reset() {
	*x = ScSeedBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScSeedBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScSeedBuild) ProtoMessage() {}

func (x *ScSeedBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScSeedBuild.ProtoReflect.Descriptor instead.
func (*ScSeedBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{33}
}

func (x *ScSeedBuild) GetMisGold() int32 {
	if x != nil {
		return x.MisGold
	}
	return 0
}

type CsRemoveBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
}

func (x *CsRemoveBuild) Reset() {
	*x = CsRemoveBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsRemoveBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsRemoveBuild) ProtoMessage() {}

func (x *CsRemoveBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsRemoveBuild.ProtoReflect.Descriptor instead.
func (*CsRemoveBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{34}
}

func (x *CsRemoveBuild) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *CsRemoveBuild) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

type ScRemoveBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 增加的钱 | @inject_tag: msgpack:"gold" json:"gold"
	Gold int32 `protobuf:"varint,1,opt,name=gold,proto3" json:"gold" msgpack:"gold"`
}

func (x *ScRemoveBuild) Reset() {
	*x = ScRemoveBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScRemoveBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScRemoveBuild) ProtoMessage() {}

func (x *ScRemoveBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScRemoveBuild.ProtoReflect.Descriptor instead.
func (*ScRemoveBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{35}
}

func (x *ScRemoveBuild) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

type CsMergerBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"fromGridX" json:"fromGridX"
	FromGridX int32 `protobuf:"varint,1,opt,name=fromGridX,proto3" json:"fromGridX" msgpack:"fromGridX"`
	// 格子 y | @inject_tag: msgpack:"fromGridY" json:"fromGridY"
	FromGridY int32 `protobuf:"varint,2,opt,name=fromGridY,proto3" json:"fromGridY" msgpack:"fromGridY"`
	// 目标格子 x | @inject_tag: msgpack:"toGridX" json:"toGridX"
	ToGridX int32 `protobuf:"varint,3,opt,name=toGridX,proto3" json:"toGridX" msgpack:"toGridX"`
	// 目标格子 y | @inject_tag: msgpack:"toGridY" json:"toGridY"
	ToGridY int32 `protobuf:"varint,4,opt,name=toGridY,proto3" json:"toGridY" msgpack:"toGridY"`
}

func (x *CsMergerBuild) Reset() {
	*x = CsMergerBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsMergerBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsMergerBuild) ProtoMessage() {}

func (x *CsMergerBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsMergerBuild.ProtoReflect.Descriptor instead.
func (*CsMergerBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{36}
}

func (x *CsMergerBuild) GetFromGridX() int32 {
	if x != nil {
		return x.FromGridX
	}
	return 0
}

func (x *CsMergerBuild) GetFromGridY() int32 {
	if x != nil {
		return x.FromGridY
	}
	return 0
}

func (x *CsMergerBuild) GetToGridX() int32 {
	if x != nil {
		return x.ToGridX
	}
	return 0
}

func (x *CsMergerBuild) GetToGridY() int32 {
	if x != nil {
		return x.ToGridY
	}
	return 0
}

type ScMergerBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScMergerBuild) Reset() {
	*x = ScMergerBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScMergerBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScMergerBuild) ProtoMessage() {}

func (x *ScMergerBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScMergerBuild.ProtoReflect.Descriptor instead.
func (*ScMergerBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{37}
}

type CsMoveBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"fromGridX" json:"fromGridX"
	FromGridX int32 `protobuf:"varint,1,opt,name=fromGridX,proto3" json:"fromGridX" msgpack:"fromGridX"`
	// 格子 y | @inject_tag: msgpack:"fromGridY" json:"fromGridY"
	FromGridY int32 `protobuf:"varint,2,opt,name=fromGridY,proto3" json:"fromGridY" msgpack:"fromGridY"`
	// 目标格子 x | @inject_tag: msgpack:"toGridX" json:"toGridX"
	ToGridX int32 `protobuf:"varint,3,opt,name=toGridX,proto3" json:"toGridX" msgpack:"toGridX"`
	// 目标格子 y | @inject_tag: msgpack:"toGridY" json:"toGridY"
	ToGridY int32 `protobuf:"varint,4,opt,name=toGridY,proto3" json:"toGridY" msgpack:"toGridY"`
}

func (x *CsMoveBuild) Reset() {
	*x = CsMoveBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsMoveBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsMoveBuild) ProtoMessage() {}

func (x *CsMoveBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsMoveBuild.ProtoReflect.Descriptor instead.
func (*CsMoveBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{38}
}

func (x *CsMoveBuild) GetFromGridX() int32 {
	if x != nil {
		return x.FromGridX
	}
	return 0
}

func (x *CsMoveBuild) GetFromGridY() int32 {
	if x != nil {
		return x.FromGridY
	}
	return 0
}

func (x *CsMoveBuild) GetToGridX() int32 {
	if x != nil {
		return x.ToGridX
	}
	return 0
}

func (x *CsMoveBuild) GetToGridY() int32 {
	if x != nil {
		return x.ToGridY
	}
	return 0
}

type ScMoveBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"fromGridX" json:"fromGridX"
	FromGridX int32 `protobuf:"varint,1,opt,name=fromGridX,proto3" json:"fromGridX" msgpack:"fromGridX"`
	// 格子 y | @inject_tag: msgpack:"fromGridY" json:"fromGridY"
	FromGridY int32 `protobuf:"varint,2,opt,name=fromGridY,proto3" json:"fromGridY" msgpack:"fromGridY"`
	// 目标格子 x | @inject_tag: msgpack:"toGridX" json:"toGridX"
	ToGridX int32 `protobuf:"varint,3,opt,name=toGridX,proto3" json:"toGridX" msgpack:"toGridX"`
	// 目标格子 y | @inject_tag: msgpack:"toGridY" json:"toGridY"
	ToGridY int32 `protobuf:"varint,4,opt,name=toGridY,proto3" json:"toGridY" msgpack:"toGridY"`
}

func (x *ScMoveBuild) Reset() {
	*x = ScMoveBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScMoveBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScMoveBuild) ProtoMessage() {}

func (x *ScMoveBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScMoveBuild.ProtoReflect.Descriptor instead.
func (*ScMoveBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{39}
}

func (x *ScMoveBuild) GetFromGridX() int32 {
	if x != nil {
		return x.FromGridX
	}
	return 0
}

func (x *ScMoveBuild) GetFromGridY() int32 {
	if x != nil {
		return x.FromGridY
	}
	return 0
}

func (x *ScMoveBuild) GetToGridX() int32 {
	if x != nil {
		return x.ToGridX
	}
	return 0
}

func (x *ScMoveBuild) GetToGridY() int32 {
	if x != nil {
		return x.ToGridY
	}
	return 0
}

type CsHarvestBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
}

func (x *CsHarvestBuild) Reset() {
	*x = CsHarvestBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsHarvestBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsHarvestBuild) ProtoMessage() {}

func (x *CsHarvestBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsHarvestBuild.ProtoReflect.Descriptor instead.
func (*CsHarvestBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{40}
}

func (x *CsHarvestBuild) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *CsHarvestBuild) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

type ScHarvestBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 收获得到的果实数 | @inject_tag: msgpack:"proNum" json:"proNum"
	ProNum int32 `protobuf:"varint,1,opt,name=proNum,proto3" json:"proNum" msgpack:"proNum"`
}

func (x *ScHarvestBuild) Reset() {
	*x = ScHarvestBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScHarvestBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScHarvestBuild) ProtoMessage() {}

func (x *ScHarvestBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScHarvestBuild.ProtoReflect.Descriptor instead.
func (*ScHarvestBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{41}
}

func (x *ScHarvestBuild) GetProNum() int32 {
	if x != nil {
		return x.ProNum
	}
	return 0
}

type CsProductFarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
	// 收成作物的 id | @inject_tag: msgpack:"productId" json:"productId"
	ProductId int32 `protobuf:"varint,3,opt,name=productId,proto3" json:"productId" msgpack:"productId"`
}

func (x *CsProductFarm) Reset() {
	*x = CsProductFarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsProductFarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsProductFarm) ProtoMessage() {}

func (x *CsProductFarm) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsProductFarm.ProtoReflect.Descriptor instead.
func (*CsProductFarm) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{42}
}

func (x *CsProductFarm) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *CsProductFarm) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

func (x *CsProductFarm) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type CsChangePosBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"fromGridX" json:"fromGridX"
	FromGridX int32 `protobuf:"varint,1,opt,name=fromGridX,proto3" json:"fromGridX" msgpack:"fromGridX"`
	// 格子 y | @inject_tag: msgpack:"fromGridY" json:"fromGridY"
	FromGridY int32 `protobuf:"varint,2,opt,name=fromGridY,proto3" json:"fromGridY" msgpack:"fromGridY"`
	// 目标格子 x | @inject_tag: msgpack:"toGridX" json:"toGridX"
	ToGridX int32 `protobuf:"varint,3,opt,name=toGridX,proto3" json:"toGridX" msgpack:"toGridX"`
	// 目标格子 y | @inject_tag: msgpack:"toGridY" json:"toGridY"
	ToGridY int32 `protobuf:"varint,4,opt,name=toGridY,proto3" json:"toGridY" msgpack:"toGridY"`
}

func (x *CsChangePosBuild) Reset() {
	*x = CsChangePosBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsChangePosBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsChangePosBuild) ProtoMessage() {}

func (x *CsChangePosBuild) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsChangePosBuild.ProtoReflect.Descriptor instead.
func (*CsChangePosBuild) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{43}
}

func (x *CsChangePosBuild) GetFromGridX() int32 {
	if x != nil {
		return x.FromGridX
	}
	return 0
}

func (x *CsChangePosBuild) GetFromGridY() int32 {
	if x != nil {
		return x.FromGridY
	}
	return 0
}

func (x *CsChangePosBuild) GetToGridX() int32 {
	if x != nil {
		return x.ToGridX
	}
	return 0
}

func (x *CsChangePosBuild) GetToGridY() int32 {
	if x != nil {
		return x.ToGridY
	}
	return 0
}

type CsTraderSale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品 | @inject_tag: msgpack:"products" json:"products"
	Products map[int32]int32 `protobuf:"bytes,1,rep,name=products,proto3" json:"products" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3" msgpack:"products"`
}

func (x *CsTraderSale) Reset() {
	*x = CsTraderSale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsTraderSale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsTraderSale) ProtoMessage() {}

func (x *CsTraderSale) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsTraderSale.ProtoReflect.Descriptor instead.
func (*CsTraderSale) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{44}
}

func (x *CsTraderSale) GetProducts() map[int32]int32 {
	if x != nil {
		return x.Products
	}
	return nil
}

type ScTraderSale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 增加的钱 | @inject_tag: msgpack:"gold" json:"gold"
	Gold int32 `protobuf:"varint,1,opt,name=gold,proto3" json:"gold" msgpack:"gold"`
	// 增加的经验 | @inject_tag: msgpack:"exp" json:"exp"
	Exp int32 `protobuf:"varint,2,opt,name=exp,proto3" json:"exp" msgpack:"exp"`
}

func (x *ScTraderSale) Reset() {
	*x = ScTraderSale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScTraderSale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScTraderSale) ProtoMessage() {}

func (x *ScTraderSale) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScTraderSale.ProtoReflect.Descriptor instead.
func (*ScTraderSale) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{45}
}

func (x *ScTraderSale) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *ScTraderSale) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

type ScOfflineAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 离线时长,以秒为单位 | @inject_tag: msgpack:"offlineTime" json:"offlineTime"
	OfflineTime int32 `protobuf:"varint,1,opt,name=offlineTime,proto3" json:"offlineTime" msgpack:"offlineTime"`
	// 金币奖励 | @inject_tag: msgpack:"gold" json:"gold"
	Gold int32 `protobuf:"varint,2,opt,name=gold,proto3" json:"gold" msgpack:"gold"`
	// 钻石奖励 | @inject_tag: msgpack:"diamond" json:"diamond"
	Diamond int32 `protobuf:"varint,3,opt,name=diamond,proto3" json:"diamond" msgpack:"diamond"`
}

func (x *ScOfflineAward) Reset() {
	*x = ScOfflineAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScOfflineAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScOfflineAward) ProtoMessage() {}

func (x *ScOfflineAward) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScOfflineAward.ProtoReflect.Descriptor instead.
func (*ScOfflineAward) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{46}
}

func (x *ScOfflineAward) GetOfflineTime() int32 {
	if x != nil {
		return x.OfflineTime
	}
	return 0
}

func (x *ScOfflineAward) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *ScOfflineAward) GetDiamond() int32 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

type CsReceiveMysteryAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 神秘礼物的 uuid，来自于服务端的消息推送 | @inject_tag: msgpack:"awardUuid" json:"awardUuid"
	AwardUuid string `protobuf:"bytes,1,opt,name=awardUuid,proto3" json:"awardUuid" msgpack:"awardUuid"`
	// 是否已观看广告。默认 false | @inject_tag: msgpack:"hasWatchAd" json:"hasWatchAd"
	HasWatchAd bool `protobuf:"varint,2,opt,name=hasWatchAd,proto3" json:"hasWatchAd" msgpack:"hasWatchAd"`
}

func (x *CsReceiveMysteryAward) Reset() {
	*x = CsReceiveMysteryAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsReceiveMysteryAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsReceiveMysteryAward) ProtoMessage() {}

func (x *CsReceiveMysteryAward) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsReceiveMysteryAward.ProtoReflect.Descriptor instead.
func (*CsReceiveMysteryAward) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{47}
}

func (x *CsReceiveMysteryAward) GetAwardUuid() string {
	if x != nil {
		return x.AwardUuid
	}
	return ""
}

func (x *CsReceiveMysteryAward) GetHasWatchAd() bool {
	if x != nil {
		return x.HasWatchAd
	}
	return false
}

type ScReceiveMysteryAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 赠送的金币奖励数量 | @inject_tag: msgpack:"gold" json:"gold"
	Gold int32 `protobuf:"varint,1,opt,name=gold,proto3" json:"gold" msgpack:"gold"`
}

func (x *ScReceiveMysteryAward) Reset() {
	*x = ScReceiveMysteryAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScReceiveMysteryAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScReceiveMysteryAward) ProtoMessage() {}

func (x *ScReceiveMysteryAward) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScReceiveMysteryAward.ProtoReflect.Descriptor instead.
func (*ScReceiveMysteryAward) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{48}
}

func (x *ScReceiveMysteryAward) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

type CsScareCrowAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稻草人 id | @inject_tag: msgpack:"scarecrowId" json:"scarecrowId"
	ScarecrowId int32 `protobuf:"varint,1,opt,name=scarecrowId,proto3" json:"scarecrowId" msgpack:"scarecrowId"`
}

func (x *CsScareCrowAdd) Reset() {
	*x = CsScareCrowAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsScareCrowAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsScareCrowAdd) ProtoMessage() {}

func (x *CsScareCrowAdd) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsScareCrowAdd.ProtoReflect.Descriptor instead.
func (*CsScareCrowAdd) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{49}
}

func (x *CsScareCrowAdd) GetScarecrowId() int32 {
	if x != nil {
		return x.ScarecrowId
	}
	return 0
}

type ScScareCrowAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稻草人 id | @inject_tag: msgpack:"scarecrowId" json:"scarecrowId"
	ScarecrowId int32 `protobuf:"varint,1,opt,name=scarecrowId,proto3" json:"scarecrowId" msgpack:"scarecrowId"`
	// 稻草人剩余时间 | @inject_tag: msgpack:"leftTime" json:"leftTime"
	LeftTime int32 `protobuf:"varint,2,opt,name=leftTime,proto3" json:"leftTime" msgpack:"leftTime"`
}

func (x *ScScareCrowAdd) Reset() {
	*x = ScScareCrowAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScScareCrowAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScScareCrowAdd) ProtoMessage() {}

func (x *ScScareCrowAdd) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScScareCrowAdd.ProtoReflect.Descriptor instead.
func (*ScScareCrowAdd) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{50}
}

func (x *ScScareCrowAdd) GetScarecrowId() int32 {
	if x != nil {
		return x.ScarecrowId
	}
	return 0
}

func (x *ScScareCrowAdd) GetLeftTime() int32 {
	if x != nil {
		return x.LeftTime
	}
	return 0
}

type ScScareCrowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稻草人 id | @inject_tag: msgpack:"scarecrowId" json:"scarecrowId"
	ScarecrowId int32 `protobuf:"varint,1,opt,name=scarecrowId,proto3" json:"scarecrowId" msgpack:"scarecrowId"`
	// 稻草人剩余时间 | @inject_tag: msgpack:"leftTime" json:"leftTime"
	LeftTime int32 `protobuf:"varint,2,opt,name=leftTime,proto3" json:"leftTime" msgpack:"leftTime"`
}

func (x *ScScareCrowInfo) Reset() {
	*x = ScScareCrowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScScareCrowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScScareCrowInfo) ProtoMessage() {}

func (x *ScScareCrowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScScareCrowInfo.ProtoReflect.Descriptor instead.
func (*ScScareCrowInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{51}
}

func (x *ScScareCrowInfo) GetScarecrowId() int32 {
	if x != nil {
		return x.ScarecrowId
	}
	return 0
}

func (x *ScScareCrowInfo) GetLeftTime() int32 {
	if x != nil {
		return x.LeftTime
	}
	return 0
}

type CsTzReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
	// 天灾 id | @inject_tag: msgpack:"tzId" json:"tzId"
	TzId int32 `protobuf:"varint,3,opt,name=tzId,proto3" json:"tzId" msgpack:"tzId"`
}

func (x *CsTzReport) Reset() {
	*x = CsTzReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsTzReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsTzReport) ProtoMessage() {}

func (x *CsTzReport) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsTzReport.ProtoReflect.Descriptor instead.
func (*CsTzReport) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{52}
}

func (x *CsTzReport) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *CsTzReport) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

func (x *CsTzReport) GetTzId() int32 {
	if x != nil {
		return x.TzId
	}
	return 0
}

type CsTzRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
	// 使用道具类型 (浇水类道具类型为1; 杀虫类道具类型为2) | @inject_tag: msgpack:"propType" json:"propType"
	PropType int32 `protobuf:"varint,3,opt,name=propType,proto3" json:"propType" msgpack:"propType"`
	// 使用的道具id | @inject_tag: msgpack:"propId" json:"propId"
	PropId int32 `protobuf:"varint,4,opt,name=propId,proto3" json:"propId" msgpack:"propId"`
}

func (x *CsTzRemove) Reset() {
	*x = CsTzRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsTzRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsTzRemove) ProtoMessage() {}

func (x *CsTzRemove) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsTzRemove.ProtoReflect.Descriptor instead.
func (*CsTzRemove) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{53}
}

func (x *CsTzRemove) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *CsTzRemove) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

func (x *CsTzRemove) GetPropType() int32 {
	if x != nil {
		return x.PropType
	}
	return 0
}

func (x *CsTzRemove) GetPropId() int32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

type ScTzRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 花费的道具 | @inject_tag: msgpack:"misGold" json:"misGold"
	MisGold int32 `protobuf:"varint,1,opt,name=misGold,proto3" json:"misGold" msgpack:"misGold"`
}

func (x *ScTzRemove) Reset() {
	*x = ScTzRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScTzRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScTzRemove) ProtoMessage() {}

func (x *ScTzRemove) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScTzRemove.ProtoReflect.Descriptor instead.
func (*ScTzRemove) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{54}
}

func (x *ScTzRemove) GetMisGold() int32 {
	if x != nil {
		return x.MisGold
	}
	return 0
}

type CsFertilizerAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
}

func (x *CsFertilizerAdd) Reset() {
	*x = CsFertilizerAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsFertilizerAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsFertilizerAdd) ProtoMessage() {}

func (x *CsFertilizerAdd) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsFertilizerAdd.ProtoReflect.Descriptor instead.
func (*CsFertilizerAdd) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{55}
}

func (x *CsFertilizerAdd) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *CsFertilizerAdd) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

type ScFertilizerAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"info" json:"info"
	Info *FertilizerInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info" msgpack:"info"`
	// 格子 y | @inject_tag: msgpack:"misGold" json:"misGold"
	MisGold int32 `protobuf:"varint,2,opt,name=misGold,proto3" json:"misGold" msgpack:"misGold"`
}

func (x *ScFertilizerAdd) Reset() {
	*x = ScFertilizerAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScFertilizerAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScFertilizerAdd) ProtoMessage() {}

func (x *ScFertilizerAdd) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScFertilizerAdd.ProtoReflect.Descriptor instead.
func (*ScFertilizerAdd) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{56}
}

func (x *ScFertilizerAdd) GetInfo() *FertilizerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ScFertilizerAdd) GetMisGold() int32 {
	if x != nil {
		return x.MisGold
	}
	return 0
}

type FertilizerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,1,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// 格子 y | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,2,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
	// 剩余时间 | @inject_tag: msgpack:"leftTime" json:"leftTime"
	LeftTime int32 `protobuf:"varint,3,opt,name=leftTime,proto3" json:"leftTime" msgpack:"leftTime"`
}

func (x *FertilizerInfo) Reset() {
	*x = FertilizerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FertilizerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FertilizerInfo) ProtoMessage() {}

func (x *FertilizerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FertilizerInfo.ProtoReflect.Descriptor instead.
func (*FertilizerInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{57}
}

func (x *FertilizerInfo) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *FertilizerInfo) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

func (x *FertilizerInfo) GetLeftTime() int32 {
	if x != nil {
		return x.LeftTime
	}
	return 0
}

type ScFertilizerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 格子 x | @inject_tag: msgpack:"info" json:"info"
	Info []*FertilizerInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info" msgpack:"info"`
}

func (x *ScFertilizerInfo) Reset() {
	*x = ScFertilizerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScFertilizerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScFertilizerInfo) ProtoMessage() {}

func (x *ScFertilizerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScFertilizerInfo.ProtoReflect.Descriptor instead.
func (*ScFertilizerInfo) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{58}
}

func (x *ScFertilizerInfo) GetInfo() []*FertilizerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CsVisitorsLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 游客登录的 uuid | @inject_tag: msgpack:"uuid" json:"uuid"
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid" msgpack:"uuid"`
}

func (x *CsVisitorsLogin) Reset() {
	*x = CsVisitorsLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsVisitorsLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsVisitorsLogin) ProtoMessage() {}

func (x *CsVisitorsLogin) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsVisitorsLogin.ProtoReflect.Descriptor instead.
func (*CsVisitorsLogin) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{59}
}

func (x *CsVisitorsLogin) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ScVisitorsLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户的会话密钥 | @inject_tag: msgpack:"session" json:"session"
	Session string `protobuf:"bytes,1,opt,name=session,proto3" json:"session" msgpack:"session"`
}

func (x *ScVisitorsLogin) Reset() {
	*x = ScVisitorsLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScVisitorsLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScVisitorsLogin) ProtoMessage() {}

func (x *ScVisitorsLogin) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScVisitorsLogin.ProtoReflect.Descriptor instead.
func (*ScVisitorsLogin) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{60}
}

func (x *ScVisitorsLogin) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

type CsBuildSpeedUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 加速类型，1表示建造加速 2表示生产加速 | @inject_tag: msgpack:"speedType" json:"speedType"
	SpeedType int32 `protobuf:"varint,1,opt,name=speedType,proto3" json:"speedType" msgpack:"speedType"`
	// | @inject_tag: msgpack:"gridX" json:"gridX"
	GridX int32 `protobuf:"varint,2,opt,name=gridX,proto3" json:"gridX" msgpack:"gridX"`
	// | @inject_tag: msgpack:"gridY" json:"gridY"
	GridY int32 `protobuf:"varint,3,opt,name=gridY,proto3" json:"gridY" msgpack:"gridY"`
	// 是否免费 | @inject_tag: msgpack:"isFree" json:"isFree"
	IsFree bool `protobuf:"varint,4,opt,name=isFree,proto3" json:"isFree" msgpack:"isFree"`
}

func (x *CsBuildSpeedUp) Reset() {
	*x = CsBuildSpeedUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsBuildSpeedUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsBuildSpeedUp) ProtoMessage() {}

func (x *CsBuildSpeedUp) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsBuildSpeedUp.ProtoReflect.Descriptor instead.
func (*CsBuildSpeedUp) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{61}
}

func (x *CsBuildSpeedUp) GetSpeedType() int32 {
	if x != nil {
		return x.SpeedType
	}
	return 0
}

func (x *CsBuildSpeedUp) GetGridX() int32 {
	if x != nil {
		return x.GridX
	}
	return 0
}

func (x *CsBuildSpeedUp) GetGridY() int32 {
	if x != nil {
		return x.GridY
	}
	return 0
}

func (x *CsBuildSpeedUp) GetIsFree() bool {
	if x != nil {
		return x.IsFree
	}
	return false
}

type ScBuildSpeedUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 减少的金币数量 | @inject_tag: msgpack:"misDiamond" json:"misDiamond"
	MisDiamond int32 `protobuf:"varint,1,opt,name=misDiamond,proto3" json:"misDiamond" msgpack:"misDiamond"`
}

func (x *ScBuildSpeedUp) Reset() {
	*x = ScBuildSpeedUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScBuildSpeedUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScBuildSpeedUp) ProtoMessage() {}

func (x *ScBuildSpeedUp) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScBuildSpeedUp.ProtoReflect.Descriptor instead.
func (*ScBuildSpeedUp) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{62}
}

func (x *ScBuildSpeedUp) GetMisDiamond() int32 {
	if x != nil {
		return x.MisDiamond
	}
	return 0
}

// 仓库信息
type ScWareHouse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 果实及其数量，对象，key是果实id，value是数量 | @inject_tag: msgpack:"products" json:"products"
	Products map[string]int32 `protobuf:"bytes,1,rep,name=products,proto3" json:"products" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3" msgpack:"products"`
}

func (x *ScWareHouse) Reset() {
	*x = ScWareHouse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_farm_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScWareHouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScWareHouse) ProtoMessage() {}

func (x *ScWareHouse) ProtoReflect() protoreflect.Message {
	mi := &file_farm_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScWareHouse.ProtoReflect.Descriptor instead.
func (*ScWareHouse) Descriptor() ([]byte, []int) {
	return file_farm_proto_rawDescGZIP(), []int{63}
}

func (x *ScWareHouse) GetProducts() map[string]int32 {
	if x != nil {
		return x.Products
	}
	return nil
}

var File_farm_proto protoreflect.FileDescriptor

var file_farm_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x68,
	0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x22, 0x8a, 0x01, 0x0a, 0x08, 0x49, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x09, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x1b, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x25, 0x0a, 0x0d, 0x46, 0x61, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x96, 0x01, 0x0a, 0x0c,
	0x46, 0x61, 0x72, 0x6d, 0x44, 0x69, 0x73, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x03,
	0x74, 0x79, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x68, 0x72, 0x6f,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x03, 0x74, 0x79, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x69, 0x64, 0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69,
	0x64, 0x59, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x4a, 0x0a, 0x08, 0x4d, 0x65, 0x65, 0x74, 0x43, 0x72, 0x6f, 0x77,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x63, 0x61, 0x72, 0x65, 0x43, 0x72, 0x6f, 0x77, 0x49,
	0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73,
	0x63, 0x61, 0x72, 0x65, 0x43, 0x72, 0x6f, 0x77, 0x49, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x22, 0x3e, 0x0a, 0x0d, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x4e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xa6, 0x01, 0x0a, 0x0f, 0x4f, 0x6e, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x43, 0x72,
	0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x68, 0x72, 0x6f,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x43, 0x72, 0x6f, 0x70, 0x4e, 0x65, 0x65, 0x64,
	0x6c, 0x65, 0x52, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x43, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x2e, 0x0a,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x4d, 0x79,
	0x73, 0x74, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a,
	0x09, 0x6e, 0x65, 0x65, 0x64, 0x43, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x43,
	0x72, 0x6f, 0x70, 0x4e, 0x65, 0x65, 0x64, 0x6c, 0x65, 0x52, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x43,
	0x72, 0x6f, 0x70, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x3f,
	0x0a, 0x0d, 0x4f, 0x6e, 0x65, 0x43, 0x72, 0x6f, 0x70, 0x4e, 0x65, 0x65, 0x64, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22,
	0x91, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x6f,
	0x6c, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6c,
	0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x63, 0x68, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x0a, 0x0a, 0x43, 0x68, 0x65,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x59, 0x0a, 0x0b, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x65,
	0x61, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x65, 0x70, 0x53, 0x65, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b, 0x65, 0x65, 0x70, 0x53, 0x65, 0x63, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2c,
	0x0a, 0x0c, 0x53, 0x63, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x63,
	0x47, 0x65, 0x74, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x06,
	0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x68,
	0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x22, 0x89, 0x02,
	0x0a, 0x0a, 0x53, 0x63, 0x47, 0x65, 0x74, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x6f,
	0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x53, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x67, 0x75, 0x69, 0x64, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x65,
	0x66, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x6c, 0x65, 0x66, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x77, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x6d, 0x61, 0x78,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x76, 0x4d, 0x61, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x78, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x4c, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x4c, 0x76, 0x4d, 0x61, 0x70, 0x22, 0x33, 0x0a, 0x0d, 0x57, 0x61, 0x72,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x32,
	0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x76, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x6c, 0x76, 0x22, 0x79, 0x0a, 0x0d, 0x43, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x78, 0x0a,
	0x0f, 0x43, 0x73, 0x57, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x65,
	0x12, 0x35, 0x0a, 0x0b, 0x73, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x0b, 0x73, 0x61, 0x76, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x09, 0x57, 0x61, 0x72, 0x65, 0x48,
	0x6f, 0x75, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x25, 0x0a, 0x0f, 0x53, 0x63, 0x57, 0x61,
	0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x22,
	0x2e, 0x0a, 0x0e, 0x43, 0x73, 0x53, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x64, 0x65, 0x53, 0x74, 0x65, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x75, 0x69, 0x64, 0x65, 0x53, 0x74, 0x65, 0x70, 0x22,
	0x25, 0x0a, 0x0b, 0x43, 0x73, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x63, 0x53, 0x65, 0x74, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x22,
	0x9b, 0x01, 0x0a, 0x0a, 0x53, 0x63, 0x46, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a,
	0x0a, 0x0c, 0x73, 0x65, 0x65, 0x64, 0x46, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x65, 0x64, 0x46, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x73, 0x65,
	0x65, 0x64, 0x46, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x09, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x50, 0x0a,
	0x0c, 0x53, 0x65, 0x65, 0x64, 0x46, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72,
	0x69, 0x64, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x61, 0x6e,
	0x68, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x61, 0x6e, 0x68, 0x65, 0x22,
	0xb9, 0x02, 0x0a, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72,
	0x69, 0x64, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61, 0x72,
	0x76, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x68, 0x6f, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x68,
	0x6f, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4f, 0x0a, 0x09, 0x43,
	0x73, 0x42, 0x75, 0x79, 0x46, 0x61, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64,
	0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67,
	0x72, 0x69, 0x64, 0x59, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x22, 0x25, 0x0a, 0x09,
	0x53, 0x63, 0x42, 0x75, 0x79, 0x46, 0x61, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x73,
	0x47, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x47,
	0x6f, 0x6c, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x43, 0x73, 0x53, 0x65, 0x65, 0x64, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69,
	0x64, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x46, 0x72, 0x65, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x63, 0x53, 0x65, 0x65, 0x64, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x47, 0x6f, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x47, 0x6f, 0x6c, 0x64, 0x22, 0x3b,
	0x0a, 0x0d, 0x43, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x67, 0x72, 0x69, 0x64, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x22, 0x23, 0x0a, 0x0d, 0x53,
	0x63, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64,
	0x22, 0x7f, 0x0a, 0x0d, 0x43, 0x73, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x58, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x59, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x58, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x74, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x58, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x47, 0x72, 0x69,
	0x64, 0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x47, 0x72, 0x69, 0x64,
	0x59, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x63, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x72, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x22, 0x7d, 0x0a, 0x0b, 0x43, 0x73, 0x4d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x58, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x59, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x58, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x74, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x58, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x47, 0x72, 0x69,
	0x64, 0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x47, 0x72, 0x69, 0x64,
	0x59, 0x22, 0x7d, 0x0a, 0x0b, 0x53, 0x63, 0x4d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x58, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x69, 0x64, 0x59, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x58, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x6f, 0x47, 0x72, 0x69, 0x64, 0x58, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x47, 0x72, 0x69, 0x64,
	0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x59,
	0x22, 0x3c, 0x0a, 0x0e, 0x43, 0x73, 0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64,
	0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x22, 0x28,
	0x0a, 0x0e, 0x53, 0x63, 0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x70, 0x72, 0x6f, 0x4e, 0x75, 0x6d, 0x22, 0x59, 0x0a, 0x0d, 0x43, 0x73, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x61, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69,
	0x64, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x67, 0x72, 0x69, 0x64, 0x59, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x43, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x6f, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x47, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x47, 0x72, 0x69, 0x64, 0x58, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x72,
	0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x47,
	0x72, 0x69, 0x64, 0x59, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x58, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x58, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x59, 0x22, 0x8d, 0x01, 0x0a, 0x0c, 0x43, 0x73, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x68,
	0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x53,
	0x61, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a, 0x0c, 0x53, 0x63, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x22, 0x60,
	0x0a, 0x0e, 0x53, 0x63, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
	0x22, 0x55, 0x0a, 0x15, 0x43, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x79, 0x73,
	0x74, 0x65, 0x72, 0x79, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x77, 0x61,
	0x72, 0x64, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x77,
	0x61, 0x72, 0x64, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x41, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x22, 0x2b, 0x0a, 0x15, 0x53, 0x63, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x67, 0x6f, 0x6c, 0x64, 0x22, 0x32, 0x0a, 0x0e, 0x43, 0x73, 0x53, 0x63, 0x61, 0x72, 0x65, 0x43,
	0x72, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x61, 0x72, 0x65, 0x63,
	0x72, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x63, 0x61,
	0x72, 0x65, 0x63, 0x72, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x0e, 0x53, 0x63, 0x53, 0x63,
	0x61, 0x72, 0x65, 0x43, 0x72, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63,
	0x61, 0x72, 0x65, 0x63, 0x72, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x73, 0x63, 0x61, 0x72, 0x65, 0x63, 0x72, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x0f, 0x53, 0x63, 0x53, 0x63,
	0x61, 0x72, 0x65, 0x43, 0x72, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x63, 0x61, 0x72, 0x65, 0x63, 0x72, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x73, 0x63, 0x61, 0x72, 0x65, 0x63, 0x72, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x0a, 0x43, 0x73, 0x54,
	0x7a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72,
	0x69, 0x64, 0x59, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x7a, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x7a, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x0a, 0x43, 0x73, 0x54, 0x7a, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x72, 0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64,
	0x59, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x0a, 0x53, 0x63, 0x54, 0x7a, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x47, 0x6f, 0x6c, 0x64, 0x22, 0x3d, 0x0a,
	0x0f, 0x43, 0x73, 0x46, 0x65, 0x72, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x22, 0x59, 0x0a, 0x0f,
	0x53, 0x63, 0x46, 0x65, 0x72, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12,
	0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x72, 0x74, 0x69, 0x6c, 0x69,
	0x7a, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x69, 0x73, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6d, 0x69, 0x73, 0x47, 0x6f, 0x6c, 0x64, 0x22, 0x58, 0x0a, 0x0e, 0x46, 0x65, 0x72, 0x74, 0x69,
	0x6c, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69,
	0x64, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x67, 0x72, 0x69, 0x64, 0x59, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x40, 0x0a, 0x10, 0x53, 0x63, 0x46, 0x65, 0x72, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x65, 0x72, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x25, 0x0a, 0x0f, 0x43, 0x73, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x0f, 0x53, 0x63,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x0e, 0x43, 0x73, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x55, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x58, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x69, 0x64, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72,
	0x69, 0x64, 0x59, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x22, 0x30, 0x0a, 0x0e, 0x53,
	0x63, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x55, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x69, 0x73, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6d, 0x69, 0x73, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x22, 0x8b, 0x01,
	0x0a, 0x0b, 0x53, 0x63, 0x57, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x57, 0x61, 0x72,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x1a, 0x3b,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x45, 0x0a, 0x0c, 0x44,
	0x69, 0x73, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x30, 0x44, 0x69, 0x73, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x72, 0x79, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x49, 0x6e, 0x73, 0x65, 0x63, 0x74, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x72, 0x6f, 0x77,
	0x10, 0x03, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x75, 0x68, 0x61, 0x6e, 0x79, 0x75, 0x6a, 0x69, 0x65, 0x2f, 0x74, 0x68, 0x72, 0x6f,
	0x77, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x66, 0x61, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_farm_proto_rawDescOnce sync.Once
	file_farm_proto_rawDescData = file_farm_proto_rawDesc
)

func file_farm_proto_rawDescGZIP() []byte {
	file_farm_proto_rawDescOnce.Do(func() {
		file_farm_proto_rawDescData = protoimpl.X.CompressGZIP(file_farm_proto_rawDescData)
	})
	return file_farm_proto_rawDescData
}

var file_farm_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_farm_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_farm_proto_goTypes = []interface{}{
	(DisasterType)(0),             // 0: throw.v1.DisasterType
	(*IRequest)(nil),              // 1: throw.v1.IRequest
	(*IResponse)(nil),             // 2: throw.v1.IResponse
	(*ErrInfo)(nil),               // 3: throw.v1.ErrInfo
	(*NormalInfo)(nil),            // 4: throw.v1.NormalInfo
	(*FarmUserLogin)(nil),         // 5: throw.v1.FarmUserLogin
	(*FarmDisaster)(nil),          // 6: throw.v1.FarmDisaster
	(*MeetCrow)(nil),              // 7: throw.v1.MeetCrow
	(*NormalSellers)(nil),         // 8: throw.v1.NormalSellers
	(*OneNormalSeller)(nil),       // 9: throw.v1.OneNormalSeller
	(*MysterySeller)(nil),         // 10: throw.v1.MysterySeller
	(*OneCropNeedle)(nil),         // 11: throw.v1.OneCropNeedle
	(*SellReward)(nil),            // 12: throw.v1.SellReward
	(*MysteryLeaf)(nil),           // 13: throw.v1.MysteryLeaf
	(*ScCheckLogin)(nil),          // 14: throw.v1.ScCheckLogin
	(*AccountInfo)(nil),           // 15: throw.v1.AccountInfo
	(*ScGetUInfoList)(nil),        // 16: throw.v1.ScGetUInfoList
	(*MyInfo)(nil),                // 17: throw.v1.MyInfo
	(*ScGetUInfo)(nil),            // 18: throw.v1.ScGetUInfo
	(*WareHouseItem)(nil),         // 19: throw.v1.WareHouseItem
	(*MaxBuildLvItem)(nil),        // 20: throw.v1.MaxBuildLvItem
	(*CsUpdateMoney)(nil),         // 21: throw.v1.CsUpdateMoney
	(*CsWareHouseSale)(nil),       // 22: throw.v1.CsWareHouseSale
	(*WareHouse)(nil),             // 23: throw.v1.WareHouse
	(*ScWareHouseSale)(nil),       // 24: throw.v1.ScWareHouseSale
	(*CsSetGuideStep)(nil),        // 25: throw.v1.CsSetGuideStep
	(*CsSetDouble)(nil),           // 26: throw.v1.CsSetDouble
	(*ScSetDouble)(nil),           // 27: throw.v1.ScSetDouble
	(*ScFarmInfo)(nil),            // 28: throw.v1.ScFarmInfo
	(*SeedFarmInfo)(nil),          // 29: throw.v1.SeedFarmInfo
	(*BuildInfo)(nil),             // 30: throw.v1.BuildInfo
	(*CsBuyFarm)(nil),             // 31: throw.v1.CsBuyFarm
	(*ScBuyFarm)(nil),             // 32: throw.v1.ScBuyFarm
	(*CsSeedBuild)(nil),           // 33: throw.v1.CsSeedBuild
	(*ScSeedBuild)(nil),           // 34: throw.v1.ScSeedBuild
	(*CsRemoveBuild)(nil),         // 35: throw.v1.CsRemoveBuild
	(*ScRemoveBuild)(nil),         // 36: throw.v1.ScRemoveBuild
	(*CsMergerBuild)(nil),         // 37: throw.v1.CsMergerBuild
	(*ScMergerBuild)(nil),         // 38: throw.v1.ScMergerBuild
	(*CsMoveBuild)(nil),           // 39: throw.v1.CsMoveBuild
	(*ScMoveBuild)(nil),           // 40: throw.v1.ScMoveBuild
	(*CsHarvestBuild)(nil),        // 41: throw.v1.CsHarvestBuild
	(*ScHarvestBuild)(nil),        // 42: throw.v1.ScHarvestBuild
	(*CsProductFarm)(nil),         // 43: throw.v1.CsProductFarm
	(*CsChangePosBuild)(nil),      // 44: throw.v1.CsChangePosBuild
	(*CsTraderSale)(nil),          // 45: throw.v1.CsTraderSale
	(*ScTraderSale)(nil),          // 46: throw.v1.ScTraderSale
	(*ScOfflineAward)(nil),        // 47: throw.v1.ScOfflineAward
	(*CsReceiveMysteryAward)(nil), // 48: throw.v1.CsReceiveMysteryAward
	(*ScReceiveMysteryAward)(nil), // 49: throw.v1.ScReceiveMysteryAward
	(*CsScareCrowAdd)(nil),        // 50: throw.v1.CsScareCrowAdd
	(*ScScareCrowAdd)(nil),        // 51: throw.v1.ScScareCrowAdd
	(*ScScareCrowInfo)(nil),       // 52: throw.v1.ScScareCrowInfo
	(*CsTzReport)(nil),            // 53: throw.v1.CsTzReport
	(*CsTzRemove)(nil),            // 54: throw.v1.CsTzRemove
	(*ScTzRemove)(nil),            // 55: throw.v1.ScTzRemove
	(*CsFertilizerAdd)(nil),       // 56: throw.v1.CsFertilizerAdd
	(*ScFertilizerAdd)(nil),       // 57: throw.v1.ScFertilizerAdd
	(*FertilizerInfo)(nil),        // 58: throw.v1.FertilizerInfo
	(*ScFertilizerInfo)(nil),      // 59: throw.v1.ScFertilizerInfo
	(*CsVisitorsLogin)(nil),       // 60: throw.v1.CsVisitorsLogin
	(*ScVisitorsLogin)(nil),       // 61: throw.v1.ScVisitorsLogin
	(*CsBuildSpeedUp)(nil),        // 62: throw.v1.CsBuildSpeedUp
	(*ScBuildSpeedUp)(nil),        // 63: throw.v1.ScBuildSpeedUp
	(*ScWareHouse)(nil),           // 64: throw.v1.ScWareHouse
	nil,                           // 65: throw.v1.SellReward.ChestEntry
	nil,                           // 66: throw.v1.CsTraderSale.ProductsEntry
	nil,                           // 67: throw.v1.ScWareHouse.ProductsEntry
}
var file_farm_proto_depIdxs = []int32{
	0,  // 0: throw.v1.FarmDisaster.typ:type_name -> throw.v1.DisasterType
	9,  // 1: throw.v1.NormalSellers.list:type_name -> throw.v1.OneNormalSeller
	11, // 2: throw.v1.OneNormalSeller.needCrops:type_name -> throw.v1.OneCropNeedle
	12, // 3: throw.v1.OneNormalSeller.rewards:type_name -> throw.v1.SellReward
	11, // 4: throw.v1.MysterySeller.needCrops:type_name -> throw.v1.OneCropNeedle
	12, // 5: throw.v1.MysterySeller.reward:type_name -> throw.v1.SellReward
	65, // 6: throw.v1.SellReward.chest:type_name -> throw.v1.SellReward.ChestEntry
	15, // 7: throw.v1.MyInfo.accountInfo:type_name -> throw.v1.AccountInfo
	19, // 8: throw.v1.ScGetUInfo.wareHouse:type_name -> throw.v1.WareHouseItem
	20, // 9: throw.v1.ScGetUInfo.maxBuildLvMap:type_name -> throw.v1.MaxBuildLvItem
	23, // 10: throw.v1.CsWareHouseSale.saveProduct:type_name -> throw.v1.WareHouse
	29, // 11: throw.v1.ScFarmInfo.seedFarmInfo:type_name -> throw.v1.SeedFarmInfo
	30, // 12: throw.v1.ScFarmInfo.buildInfo:type_name -> throw.v1.BuildInfo
	66, // 13: throw.v1.CsTraderSale.products:type_name -> throw.v1.CsTraderSale.ProductsEntry
	58, // 14: throw.v1.ScFertilizerAdd.info:type_name -> throw.v1.FertilizerInfo
	58, // 15: throw.v1.ScFertilizerInfo.info:type_name -> throw.v1.FertilizerInfo
	67, // 16: throw.v1.ScWareHouse.products:type_name -> throw.v1.ScWareHouse.ProductsEntry
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_farm_proto_init() }
func file_farm_proto_init() {
	if File_farm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_farm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NormalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmUserLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmDisaster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeetCrow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NormalSellers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneNormalSeller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysterySeller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneCropNeedle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysteryLeaf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScCheckLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScGetUInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScGetUInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WareHouseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBuildLvItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsUpdateMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsWareHouseSale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WareHouse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScWareHouseSale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsSetGuideStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsSetDouble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScSetDouble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScFarmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeedFarmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsBuyFarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScBuyFarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsSeedBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScSeedBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsRemoveBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScRemoveBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsMergerBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScMergerBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsMoveBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScMoveBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsHarvestBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScHarvestBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsProductFarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsChangePosBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsTraderSale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScTraderSale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScOfflineAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsReceiveMysteryAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScReceiveMysteryAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsScareCrowAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScScareCrowAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScScareCrowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsTzReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsTzRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScTzRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsFertilizerAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScFertilizerAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FertilizerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScFertilizerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsVisitorsLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScVisitorsLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsBuildSpeedUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScBuildSpeedUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_farm_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScWareHouse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_farm_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_farm_proto_goTypes,
		DependencyIndexes: file_farm_proto_depIdxs,
		EnumInfos:         file_farm_proto_enumTypes,
		MessageInfos:      file_farm_proto_msgTypes,
	}.Build()
	File_farm_proto = out.File
	file_farm_proto_rawDesc = nil
	file_farm_proto_goTypes = nil
	file_farm_proto_depIdxs = nil
}
